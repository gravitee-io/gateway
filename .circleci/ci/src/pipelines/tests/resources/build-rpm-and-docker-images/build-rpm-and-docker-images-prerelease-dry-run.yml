# This configuration has been automatically generated by the CircleCI Config SDK.
# For more information, see https://github.com/CircleCI-Public/circleci-config-sdk-ts
# SDK Version: 0.0.0-development

version: 2.1
setup: false
parameters:
  gio_action:
    type: string
    default: pull_requests
    description: ""
  dry_run:
    type: boolean
    default: true
    description: Run in dry run mode?
  docker_tag_as_latest:
    type: boolean
    default: false
    description: Is this version the latest version available?
  graviteeio_version:
    type: string
    default: ""
    description: Version of APIM to be used in docker images
  apim_version_path:
    type: string
    default: /home/circleci/project/pom.xml
    description: Path to pom.xml with APIM version
commands:
  cmd-create-docker-context:
    steps:
      - run:
          name: Create docker context for buildx
          command: |-
            docker context create tls-env
            docker buildx create tls-env --use
  cmd-add-docker-image-in-snyk:
    parameters:
      docker-image-name:
        type: string
      version:
        type: string
    steps:
      - run:
          name: Add << parameters.docker-image-name >> << parameters.version >> to Snyk
          command: |-
            curl --fail \
                --include \
                --request POST \
                --header "Content-Type: application/json; charset=utf-8" \
                --header "Authorization: token ${SNYK_API_TOKEN}" \
                --data-binary "{
              \"target\": {
                \"name\": \"<< parameters.docker-image-name >>:<< parameters.version >>\"
              }
            }" \
            "https://api.snyk.io/api/v1/org/${SNYK_ORG_ID}/integrations/${SNYK_INTEGRATION_ID}/import"
jobs:
  job-publish-prod-docker-images:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - setup_remote_docker:
          version: 20.10.6
      - checkout
      - keeper/env-export:
          secret-url: keeper://cooU9UoXIk8Kj0hsP2rkBw/field/login
          var-name: DOCKERHUB_BOT_USER_NAME
      - keeper/env-export:
          secret-url: keeper://cooU9UoXIk8Kj0hsP2rkBw/field/password
          var-name: DOCKERHUB_BOT_USER_TOKEN
      - cmd-create-docker-context
      - run:
          name: Build & Publish Gravitee.io APIM Docker images
          command: |
            echo "DRY RUN Mode. Build only"
            docker buildx build --platform=linux/arm64,linux/amd64 --build-arg GRAVITEEIO_VERSION=4.1.0-alpha.1 --build-arg GRAVITEEIO_DOWNLOAD_URL=https://gravitee-dry-releases-downloads.cellar-c2.services.clever-cloud.com/pre-releases/graviteeio-apim/distributions --quiet  -t graviteeio/apim-gateway:4.1.0-alpha.1 -t graviteeio/apim-gateway:4.1.0-alpha  -f ./gravitee-apim-gateway/docker/Dockerfile-from-download ./gravitee-apim-gateway/docker
            docker buildx build --platform=linux/arm64,linux/amd64 --build-arg GRAVITEEIO_VERSION=4.1.0-alpha.1 --build-arg GRAVITEEIO_DOWNLOAD_URL=https://gravitee-dry-releases-downloads.cellar-c2.services.clever-cloud.com/pre-releases/graviteeio-apim/distributions --quiet  -t graviteeio/apim-management-api:4.1.0-alpha.1 -t graviteeio/apim-management-api:4.1.0-alpha  -f ./gravitee-apim-rest-api/docker/Dockerfile-from-download ./gravitee-apim-rest-api/docker
            docker buildx build --platform=linux/arm64,linux/amd64 --build-arg GRAVITEEIO_VERSION=4.1.0-alpha.1 --build-arg GRAVITEEIO_DOWNLOAD_URL=https://gravitee-dry-releases-downloads.cellar-c2.services.clever-cloud.com/pre-releases/graviteeio-apim/distributions --quiet  -t graviteeio/apim-management-ui:4.1.0-alpha.1 -t graviteeio/apim-management-ui:4.1.0-alpha  -f ./gravitee-apim-console-webui/docker/Dockerfile-from-download ./gravitee-apim-console-webui/docker
            docker buildx build --platform=linux/arm64,linux/amd64 --build-arg GRAVITEEIO_VERSION=4.1.0-alpha.1 --build-arg GRAVITEEIO_DOWNLOAD_URL=https://gravitee-dry-releases-downloads.cellar-c2.services.clever-cloud.com/pre-releases/graviteeio-apim/distributions --quiet  -t graviteeio/apim-portal-ui:4.1.0-alpha.1 -t graviteeio/apim-portal-ui:4.1.0-alpha  -f ./gravitee-apim-portal-webui/docker/Dockerfile-from-download ./gravitee-apim-portal-webui/docker
  job-add-docker-images-in-snyk:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - keeper/env-export:
          secret-url: keeper://s83JmReKpBZWjHdud6ZAlg/custom_field/gravitee_apim_org_api_token
          var-name: SNYK_API_TOKEN
      - keeper/env-export:
          secret-url: keeper://s83JmReKpBZWjHdud6ZAlg/custom_field/gravitee_apim_org_id
          var-name: SNYK_ORG_ID
      - keeper/env-export:
          secret-url: keeper://s83JmReKpBZWjHdud6ZAlg/custom_field/gravitee_apim_acr_integration_id
          var-name: SNYK_INTEGRATION_ID
      - cmd-add-docker-image-in-snyk:
          docker-image-name: apim-gateway
          version: master-latest
      - cmd-add-docker-image-in-snyk:
          docker-image-name: apim-management-api
          version: master-latest
      - cmd-add-docker-image-in-snyk:
          docker-image-name: apim-management-ui
          version: master-latest
      - cmd-add-docker-image-in-snyk:
          docker-image-name: apim-portal-ui
          version: master-latest
  job-publish-rpm-packages:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: false
    resource_class: medium
    steps:
      - keeper/env-export:
          secret-url: keeper://8CG6HxY5gYsl-85eJKuIoA/field/password
          var-name: GIO_PACKAGECLOUD_TOKEN
      - run:
          name: Building and publishing RPMs
          command: |-
            export GIT_GRAVITEE_PACKAGES_REPO=$(mktemp -d)
            git clone git@github.com:gravitee-io/packages.git ${GIT_GRAVITEE_PACKAGES_REPO}

            cd ${GIT_GRAVITEE_PACKAGES_REPO}/apim/4.x
            ./build.sh -v 4.1.0-alpha.1
            echo "This is just a DRY RUN, RPMs will be published in https://packagecloud.io/graviteeio/nightly"
            docker run --rm -v "${GIT_GRAVITEE_PACKAGES_REPO}/apim/4.x:/packages" -e PACKAGECLOUD_TOKEN=${GIO_PACKAGECLOUD_TOKEN} digitalocean/packagecloud push --yes --skip-errors --verbose graviteeio/nightly/el/7 /packages/*.rpm
workflows:
  build-rpm-&-docker-images:
    jobs:
      - job-publish-prod-docker-images:
          context:
            - cicd-orchestrator
          name: Build and push docker images for APIM 4.1.0-alpha.1 - Dry Run
      - job-add-docker-images-in-snyk:
          context:
            - cicd-orchestrator
          name: Add images to Snyk
          requires:
            - Build and push docker images for APIM 4.1.0-alpha.1 - Dry Run
      - job-publish-rpm-packages:
          context:
            - cicd-orchestrator
          name: Build and push RPM packages for APIM 4.1.0-alpha.1 - Dry Run
orbs:
  keeper: gravitee-io/keeper@0.6.3
