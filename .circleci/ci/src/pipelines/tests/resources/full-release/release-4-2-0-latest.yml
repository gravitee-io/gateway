# This configuration has been automatically generated by the CircleCI Config SDK.
# For more information, see https://github.com/CircleCI-Public/circleci-config-sdk-ts
# SDK Version: 0.0.0-development

version: 2.1
setup: false
parameters:
  gio_action:
    type: string
    default: pull_requests
    description: ""
  dry_run:
    type: boolean
    default: true
    description: Run in dry run mode?
  docker_tag_as_latest:
    type: boolean
    default: false
    description: Is this version the latest version available?
  graviteeio_version:
    type: string
    default: ""
    description: Version of APIM to be used in docker images
  apim_version_path:
    type: string
    default: /home/circleci/project/pom.xml
    description: Path to pom.xml with APIM version
commands:
  cmd-webui-install:
    parameters:
      apim-ui-project:
        type: string
        default: ""
        description: the name of the UI project to build
    steps:
      - restore_cache:
          name: Restore NPM cache
          keys:
            - << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}-{{ checksum "<< parameters.apim-ui-project >>/package-lock.json" }}
            - << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}
      - run:
          name: Install dependencies
          command: npm install
          working_directory: << parameters.apim-ui-project >>
      - save_cache:
          name: Save NPM cache
          key: << parameters.apim-ui-project >>-cache-v1-{{ .Branch }}-{{ checksum "<< parameters.apim-ui-project >>/package-lock.json" }}
          paths:
            - ./<< parameters.apim-ui-project >>/node_modules
  cmd-notify-on-failure:
    steps:
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - slack/notify:
          channel: C02JENTV2AX
          branch_pattern: master,[0-9]+\.[0-9]+\.x
          event: fail
          template: basic_fail_1
  cmd-create-docker-context:
    steps:
      - run:
          name: Create docker context for buildx
          command: |-
            docker context create tls-env
            docker buildx create tls-env --use
  cmd-docker-azure-login:
    steps:
      - keeper/env-export:
          secret-url: keeper://Q721P2LSOPJ9qiXLuf5AHQ/field/login
          var-name: AZURE_DOCKER_REGISTRY_USERNAME
      - keeper/env-export:
          secret-url: keeper://Q721P2LSOPJ9qiXLuf5AHQ/field/password
          var-name: AZURE_DOCKER_REGISTRY_PASSWORD
      - run:
          name: Login to Azure Container Registry
          command: echo $AZURE_DOCKER_REGISTRY_PASSWORD | docker login --username $AZURE_DOCKER_REGISTRY_USERNAME --password-stdin graviteeio.azurecr.io
    description: Login to Azure Container Registry
  cmd-docker-azure-logout:
    steps:
      - run:
          name: Logout from Azure Container Registry
          command: docker logout graviteeio.azurecr.io
    description: Logout from Azure Container Registry
  cmd-add-docker-image-in-snyk:
    parameters:
      docker-image-name:
        type: string
      version:
        type: string
    steps:
      - run:
          name: Add << parameters.docker-image-name >> << parameters.version >> to Snyk
          command: |-
            curl --fail \
                --include \
                --request POST \
                --header "Content-Type: application/json; charset=utf-8" \
                --header "Authorization: token ${SNYK_API_TOKEN}" \
                --data-binary "{
              \"target\": {
                \"name\": \"<< parameters.docker-image-name >>:<< parameters.version >>\"
              }
            }" \
            "https://api.snyk.io/api/v1/org/${SNYK_ORG_ID}/integrations/${SNYK_INTEGRATION_ID}/import"
  cmd-build-ui-image:
    parameters:
      docker-image-name:
        type: string
        default: ""
        description: the name of the image
      apim-ui-project:
        type: string
        default: ""
        description: the name of the UI project to build
    steps:
      - cmd-create-docker-context
      - cmd-docker-azure-login
      - run:
          name: Build UI docker image
          command: |-
            docker buildx build --push --platform=linux/arm64,linux/amd64 -f docker/Dockerfile \
            -t graviteeio.azurecr.io/<< parameters.docker-image-name >>:4.2.x-latest \
            .
          working_directory: << parameters.apim-ui-project >>
      - keeper/env-export:
          secret-url: keeper://s83JmReKpBZWjHdud6ZAlg/custom_field/gravitee_apim_org_api_token
          var-name: SNYK_API_TOKEN
      - keeper/env-export:
          secret-url: keeper://s83JmReKpBZWjHdud6ZAlg/custom_field/gravitee_apim_org_id
          var-name: SNYK_ORG_ID
      - keeper/env-export:
          secret-url: keeper://s83JmReKpBZWjHdud6ZAlg/custom_field/gravitee_apim_acr_integration_id
          var-name: SNYK_INTEGRATION_ID
      - cmd-add-docker-image-in-snyk:
          docker-image-name: << parameters.docker-image-name >>
          version: 4.2.x-latest
      - cmd-docker-azure-logout
  cmd-restore-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - restore_cache:
          keys:
            - gravitee-api-management-v9-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
            - gravitee-api-management-v9-<< parameters.jobName >>-{{ .Branch }}
            - gravitee-api-management-v9-<< parameters.jobName >>
    description: Restore Maven cache for a dedicated job
  cmd-prepare-gpg:
    steps:
      - keeper/install
      - run:
          command: |-
            ksm secret notation keeper://riW92t8X4tk4ZmQc8-FZ4Q/custom_field/armor_format_pub_key > pub.key
            gpg --import pub.key

            ksm secret notation keeper://riW92t8X4tk4ZmQc8-FZ4Q/custom_field/armor_format_private_key > private.key
            # Need --batch to be able to import private key
            gpg --import --batch private.key
    description: Prepare GPG command
  cmd-save-maven-job-cache:
    parameters:
      jobName:
        type: string
        default: ""
        description: The job name
    steps:
      - run:
          name: Exclude all APIM artefacts from cache.
          command: rm -rf ~/.m2/repository/io/gravitee/apim
      - save_cache:
          key: gravitee-api-management-v9-<< parameters.jobName >>-{{ .Branch }}-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
          when: always
    description: Save Maven cache for a dedicated job
jobs:
  job-setup:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://7CgijuGiFDSLynRJt1Dm9w/custom_field/xml
          var-name: MAVEN_SETTINGS
      - run:
          command: "echo $MAVEN_SETTINGS > .gravitee.settings.xml "
      - persist_to_workspace:
          root: .
          paths:
            - .gravitee.settings.xml
  job-slack-announcement:
    parameters:
      message:
        type: string
        default: ""
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - slack/notify:
          channel: C02NGT20S4W
          event: always
          custom: |-
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<< parameters.message >>"
                  }
                }
              ]
            }
  job-webui-build:
    parameters:
      apim-ui-project:
        type: string
        default: ""
        description: the name of the UI project to build
      docker-image-name:
        type: string
        default: ""
        description: the name of the image
      node_version:
        type: string
        default: "16.13"
        description: Node version to use for executor
    docker:
      - image: cimg/node:<< parameters.node_version >>
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: 20.10.6
      - cmd-webui-install:
          apim-ui-project: << parameters.apim-ui-project >>
      - run:
          name: Update Build version
          command: "sed -i 's/\"version\": \".*\"/\"version\": \"4.2.0\"/' << parameters.apim-ui-project >>/build.json"
      - run:
          name: Build
          command: npm run build:prod
          environment:
            NODE_OPTIONS: --max_old_space_size=4086
          working_directory: << parameters.apim-ui-project >>
      - cmd-build-ui-image:
          docker-image-name: << parameters.docker-image-name >>
          apim-ui-project: << parameters.apim-ui-project >>
      - cmd-notify-on-failure
      - persist_to_workspace:
          root: .
          paths:
            - << parameters.apim-ui-project >>/dist
  job-webui-publish-artifactory:
    parameters:
      apim-ui-project:
        type: string
        default: ""
        description: the name of the UI project to publish
    docker:
      - image: cimg/node:16.13
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - keeper/env-export:
          secret-url: keeper://R7NuqoW0KD-8l-kjx0-PgQ/field/login
          var-name: ARTIFACTORY_USER
      - keeper/env-export:
          secret-url: keeper://R7NuqoW0KD-8l-kjx0-PgQ/field/password
          var-name: ARTIFACTORY_API_KEY
      - artifactory-orb/install
      - artifactory-orb/configure
      - run:
          name: Update Build version
          command: sed -i "s/-SNAPSHOT//" dist/build.json
          working_directory: << parameters.apim-ui-project >>
      - run:
          name: Rename and zip dist folder
          command: mv dist << parameters.apim-ui-project >>-4.2.0 && zip -r dist.zip << parameters.apim-ui-project >>-4.2.0
          working_directory: << parameters.apim-ui-project >>
      - artifactory-orb/upload:
          source: << parameters.apim-ui-project >>/dist.zip
          target: gravitee-releases/io/gravitee/apim/ui/<< parameters.apim-ui-project >>/4.2.0/<< parameters.apim-ui-project >>-4.2.0.zip
      - cmd-notify-on-failure
    environment:
      ARTIFACTORY_URL: https://odbxikk7vo-artifactory.services.clever-cloud.com
  job-backend-build-and-publish-artifactory:
    docker:
      - image: cimg/openjdk:17.0.8
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - cmd-restore-maven-job-cache:
          jobName: job-backend-build-and-publish-artifactory
      - run:
          name: Remove `-SNAPSHOT` from versions
          command: |-
            mvn -B versions:set -DremoveSnapshot=true -DgenerateBackupPoms=false
            sed -i "s#<changelist>.*</changelist>#<changelist></changelist>#" pom.xml
      - cmd-prepare-gpg
      - run:
          name: Maven deploy to Gravitee's private Artifactory
          command: mvn --settings .gravitee.settings.xml -B -U -P all-modules,gio-artifactory-release,gio-release clean deploy -DskipTests=true -Dskip.validation -T 4 --no-transfer-progress
          environment:
            BUILD_ID: "1234"
            BUILD_NUMBER: "1234"
            GIT_COMMIT: 784ff35ca
      - cmd-save-maven-job-cache:
          jobName: job-backend-build-and-publish-artifactory
  job-release-commit-and-prepare-next-version:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - ac:88:23:8f:c6:0f:7d:f0:fc:df:73:20:34:56:02:6c
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/field/login
          var-name: GIT_USER_NAME
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/custom_field/email
          var-name: GIT_USER_EMAIL
      - run:
          name: Git config
          command: |-
            git config --global user.name "${GIT_USER_NAME}"
             git config --global user.email "${GIT_USER_EMAIL}"
      - run:
          name: "Git release "
          command: |
            # Remove `-SNAPSHOT` from source
            # Backend
            sed -i "s#<changelist>.*</changelist>#<changelist></changelist>#" pom.xml

            # UI
            sed -i 's/"version": ".*"/"version": "4.2.0"/' gravitee-apim-console-webui/build.json
            sed -i 's/"version": ".*"/"version": "4.2.0"/' gravitee-apim-portal-webui/build.json

            git add --update
            git commit -m "4.2.0"
            git tag 4.2.0

            # Set the version to the next version (bump patch version + '-SNAPSHOT')
            sed -i "s#<revision>.*</revision>#<revision>4.2.1</revision>#" pom.xml                   
            sed -i "s#<changelist>.*</changelist>#<changelist>-SNAPSHOT</changelist>#" pom.xml
            sed -i "s#<sha1>.*</sha1>#<sha1></sha1>#" pom.xml

            sed -i 's#version: ".*"#version: "4.2.1-SNAPSHOT"#' gravitee-apim-rest-api/gravitee-apim-rest-api-portal/gravitee-apim-rest-api-portal-rest/src/main/resources/portal-openapi.yaml
            sed -i 's#"version": ".*"#"version": "4.2.1-SNAPSHOT"#' gravitee-apim-console-webui/build.json
            sed -i 's#"version": ".*"#"version": "4.2.1-SNAPSHOT"#' gravitee-apim-portal-webui/build.json

            # Helm chart increase version, appVersion and clean the artifacthub.io/changes annotation
            sed -e "0,/^version:/{s/version:.*/version: 4.2.1/}" \
                -e "0,/^appVersion:/{ s/appVersion.*/appVersion: 4.2.1/ }" \
                -e '/artifacthub.io\/changes/,${ s/|//; /^[ ]*\- /d }' \
                -i helm/Chart.yaml

            git add --update
            git commit -m 'chore: prepare next version [skip ci]'

            git push -u  origin 4.2.x
            git push --tags  origin 4.2.x
  job-package-bundle:
    docker:
      - image: cimg/openjdk:17.0.8-node
    resource_class: medium
    steps:
      - keeper/env-export:
          secret-url: keeper://R7NuqoW0KD-8l-kjx0-PgQ/field/login
          var-name: ARTIFACTORY_USERNAME
      - keeper/env-export:
          secret-url: keeper://R7NuqoW0KD-8l-kjx0-PgQ/field/password
          var-name: ARTIFACTORY_PASSWORD
      - checkout
      - run:
          name: Checkout tag 4.2.0
          command: git checkout 4.2.0
      - run:
          name: Install dependencies
          command: npm install
          working_directory: ./release
      - run:
          name: Building package bundle
          command: npm run zx -- --quiet --experimental ci-steps/package-bundles.mjs --version=4.2.0
          working_directory: ./release
          environment:
            ARTIFACTORY_REPO_URL: https://odbxikk7vo-artifactory.services.clever-cloud.com/external-dependencies-n-gravitee-all
      - keeper/env-export:
          secret-url: keeper://Mqmplmfu17bDR5XRLmO1mQ/field/password
          var-name: AWS_ACCESS_KEY_ID
      - keeper/env-export:
          secret-url: keeper://3-pU56sIqcyWWw7HxhxjaQ/field/password
          var-name: AWS_SECRET_ACCESS_KEY
      - aws-s3/sync:
          arguments: --endpoint-url https://cellar-c2.services.clever-cloud.com --acl public-read
          from: ./release/.tmp/4.2.0/dist
          to: s3://gravitee-releases-downloads/graviteeio-apim
  job-release-helm:
    docker:
      - image: cimg/node:16.13
    resource_class: medium
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/field/login
          var-name: GIT_USER_NAME
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/custom_field/email
          var-name: GIT_USER_EMAIL
      - keeper/env-export:
          secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
          var-name: GITHUB_TOKEN
      - add_ssh_keys:
          fingerprints:
            - ac:88:23:8f:c6:0f:7d:f0:fc:df:73:20:34:56:02:6c
      - run:
          name: Git config
          command: |-
            git config --global user.name "${GIT_USER_NAME}"
            git config --global user.email "${GIT_USER_EMAIL}"
      - gh/setup
      - helm/install_helm_client:
          version: v3.12.3
      - run:
          name: Checkout tag 4.2.0
          command: git checkout 4.2.0
      - run:
          name: build the Charts
          working_directory: ./helm
          command: |-
            helm dependency update
            helm package -d charts .

            sed "s/name.*/name: apim3/" -i Chart.yaml
            helm package -d charts .
      - run:
          name: Install dependencies
          command: npm install
          working_directory: ./release
      - run:
          name: Open a PR to publish helm chart release into helm-charts repository
          working_directory: ./release
          command: npm run zx -- ci-steps/release-helm.mjs --version=4.2.0
  job-publish-prod-docker-images:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - setup_remote_docker:
          version: 20.10.6
      - checkout
      - keeper/env-export:
          secret-url: keeper://cooU9UoXIk8Kj0hsP2rkBw/field/login
          var-name: DOCKERHUB_BOT_USER_NAME
      - keeper/env-export:
          secret-url: keeper://cooU9UoXIk8Kj0hsP2rkBw/field/password
          var-name: DOCKERHUB_BOT_USER_TOKEN
      - cmd-create-docker-context
      - run:
          name: Build & Publish Gravitee.io APIM Docker images
          command: |-
            docker login --username="${DOCKERHUB_BOT_USER_NAME}" -p="${DOCKERHUB_BOT_USER_TOKEN}"
            docker buildx build --push --platform=linux/arm64,linux/amd64 --build-arg GRAVITEEIO_VERSION=4.2.0 --build-arg GRAVITEEIO_DOWNLOAD_URL=https://download.gravitee.io/graviteeio-apim/distributions --quiet  -t graviteeio/apim-gateway:4.2.0 -t graviteeio/apim-gateway:4.2 -t graviteeio/apim-gateway:4 -t graviteeio/apim-gateway:latest  -f ./gravitee-apim-gateway/docker/Dockerfile-from-download ./gravitee-apim-gateway/docker
            docker buildx build --push --platform=linux/arm64,linux/amd64 --build-arg GRAVITEEIO_VERSION=4.2.0 --build-arg GRAVITEEIO_DOWNLOAD_URL=https://download.gravitee.io/graviteeio-apim/distributions --quiet  -t graviteeio/apim-management-api:4.2.0 -t graviteeio/apim-management-api:4.2 -t graviteeio/apim-management-api:4 -t graviteeio/apim-management-api:latest  -f ./gravitee-apim-rest-api/docker/Dockerfile-from-download ./gravitee-apim-rest-api/docker
            docker buildx build --push --platform=linux/arm64,linux/amd64 --build-arg GRAVITEEIO_VERSION=4.2.0 --build-arg GRAVITEEIO_DOWNLOAD_URL=https://download.gravitee.io/graviteeio-apim/distributions --quiet  -t graviteeio/apim-management-ui:4.2.0 -t graviteeio/apim-management-ui:4.2 -t graviteeio/apim-management-ui:4 -t graviteeio/apim-management-ui:latest  -f ./gravitee-apim-console-webui/docker/Dockerfile-from-download ./gravitee-apim-console-webui/docker
            docker buildx build --push --platform=linux/arm64,linux/amd64 --build-arg GRAVITEEIO_VERSION=4.2.0 --build-arg GRAVITEEIO_DOWNLOAD_URL=https://download.gravitee.io/graviteeio-apim/distributions --quiet  -t graviteeio/apim-portal-ui:4.2.0 -t graviteeio/apim-portal-ui:4.2 -t graviteeio/apim-portal-ui:4 -t graviteeio/apim-portal-ui:latest  -f ./gravitee-apim-portal-webui/docker/Dockerfile-from-download ./gravitee-apim-portal-webui/docker
            docker logout
  job-add-docker-images-in-snyk:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - keeper/env-export:
          secret-url: keeper://s83JmReKpBZWjHdud6ZAlg/custom_field/gravitee_apim_org_api_token
          var-name: SNYK_API_TOKEN
      - keeper/env-export:
          secret-url: keeper://s83JmReKpBZWjHdud6ZAlg/custom_field/gravitee_apim_org_id
          var-name: SNYK_ORG_ID
      - keeper/env-export:
          secret-url: keeper://s83JmReKpBZWjHdud6ZAlg/custom_field/gravitee_apim_acr_integration_id
          var-name: SNYK_INTEGRATION_ID
      - cmd-add-docker-image-in-snyk:
          docker-image-name: apim-gateway
          version: 4.2.x-latest
      - cmd-add-docker-image-in-snyk:
          docker-image-name: apim-management-api
          version: 4.2.x-latest
      - cmd-add-docker-image-in-snyk:
          docker-image-name: apim-management-ui
          version: 4.2.x-latest
      - cmd-add-docker-image-in-snyk:
          docker-image-name: apim-portal-ui
          version: 4.2.x-latest
  job-publish-rpm-packages:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: false
    resource_class: medium
    steps:
      - keeper/env-export:
          secret-url: keeper://8CG6HxY5gYsl-85eJKuIoA/field/password
          var-name: GIO_PACKAGECLOUD_TOKEN
      - run:
          name: Building and publishing RPMs
          command: |-
            export GIT_GRAVITEE_PACKAGES_REPO=$(mktemp -d)
            git clone git@github.com:gravitee-io/packages.git ${GIT_GRAVITEE_PACKAGES_REPO}

            cd ${GIT_GRAVITEE_PACKAGES_REPO}/apim/4.x
            ./build.sh -v 4.2.0
            docker run --rm -v "${GIT_GRAVITEE_PACKAGES_REPO}/apim/4.x:/packages" -e PACKAGECLOUD_TOKEN=${GIO_PACKAGECLOUD_TOKEN} digitalocean/packagecloud push --yes --skip-errors --verbose graviteeio/rpms/el/7 /packages/*.rpm
  job-release-notes-apim:
    docker:
      - image: cimg/node:16.13
    resource_class: medium
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/field/login
          var-name: GIT_USER_NAME
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/custom_field/email
          var-name: GIT_USER_EMAIL
      - keeper/env-export:
          secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
          var-name: GITHUB_TOKEN
      - keeper/env-export:
          secret-url: keeper://ZOz4db245GNaETVwmPBk8w/field/password
          var-name: SLACK_ACCESS_TOKEN
      - keeper/env-export:
          secret-url: keeper://hfnQD5TEfxzwRXUKhJhM-A/field/password
          var-name: JIRA_TOKEN
      - add_ssh_keys:
          fingerprints:
            - ac:88:23:8f:c6:0f:7d:f0:fc:df:73:20:34:56:02:6c
      - run:
          name: Git config
          command: |-
            git config --global user.name "${GIT_USER_NAME}"
            git config --global user.email "${GIT_USER_EMAIL}"
      - gh/setup
      - run:
          name: Install dependencies
          command: npm install
          working_directory: ./release
      - run:
          name: Open a PR to create release notes into docs repository
          command: npm run zx -- --quiet ci-steps/generate-changelog.mjs --version=4.2.0
          working_directory: ./release
      - run:
          name: Get RELEASE_NOTES_PR_URL
          command: echo "export RELEASE_NOTES_PR_URL=$(cat /tmp/releaseNotesPrUrl.txt)" >> $BASH_ENV
      - slack/notify:
          channel: C02NGT20S4W
          event: pass
          custom: |-
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":memo: APIM Changelog 4.2.0 can be completed <${RELEASE_NOTES_PR_URL}|here> @tech_writers_team :pray:"
                  }
                }
              ]
            }
  job-nexus-staging:
    docker:
      - image: cimg/openjdk:17.0.8
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Checkout tag 4.2.0
          command: git checkout 4.2.0
      - cmd-restore-maven-job-cache:
          jobName: job-nexus-staging
      - attach_workspace:
          at: .
      - cmd-prepare-gpg
      - run:
          name: Release on Nexus
          command: mvn clean deploy --activate-profiles gravitee-release --batch-mode -Dmaven.test.skip=true -DskipTests -Dskip.validation=true --settings .gravitee.settings.xml --update-snapshots
      - cmd-save-maven-job-cache:
          jobName: job-nexus-staging
workflows:
  full_release:
    jobs:
      - job-setup:
          context:
            - cicd-orchestrator
          name: Setup
      - job-slack-announcement:
          context:
            - cicd-orchestrator
          name: Announce release is starting
          message: 🚀 Starting APIM 4.2.0 release!
      - job-webui-build:
          context:
            - cicd-orchestrator
          name: Build APIM Portal and publish image
          apim-ui-project: gravitee-apim-portal-webui
          docker-image-name: apim-portal-ui
          node_version: "18.18"
          requires:
            - Setup
      - job-webui-publish-artifactory:
          context:
            - cicd-orchestrator
          name: Publish APIM Portal to artifactory
          apim-ui-project: gravitee-apim-portal-webui
          requires:
            - Build APIM Portal and publish image
      - job-webui-build:
          context:
            - cicd-orchestrator
          name: Build APIM Console and publish image
          apim-ui-project: gravitee-apim-console-webui
          docker-image-name: apim-management-ui
          requires:
            - Setup
      - job-webui-publish-artifactory:
          context:
            - cicd-orchestrator
          name: Publish APIM Console to artifactory
          apim-ui-project: gravitee-apim-console-webui
          requires:
            - Build APIM Console and publish image
      - job-backend-build-and-publish-artifactory:
          context:
            - cicd-orchestrator
          name: Backend build and publish to artifactory
          requires:
            - Setup
      - job-release-commit-and-prepare-next-version:
          context:
            - cicd-orchestrator
          name: Commit and prepare next version
          requires:
            - Backend build and publish to artifactory
            - Publish APIM Console to artifactory
            - Publish APIM Portal to artifactory
      - job-package-bundle:
          context:
            - cicd-orchestrator
          name: Package bundle
          requires:
            - Commit and prepare next version
      - job-release-helm:
          context:
            - cicd-orchestrator
          name: Release Helm Chart
          requires:
            - Package bundle
      - job-publish-prod-docker-images:
          context:
            - cicd-orchestrator
          name: Build and push docker images for APIM 4.2.0
          requires:
            - Package bundle
      - job-add-docker-images-in-snyk:
          context:
            - cicd-orchestrator
          name: Push docker images to Snyk
          requires:
            - Build and push docker images for APIM 4.2.0
      - job-publish-rpm-packages:
          context:
            - cicd-orchestrator
          name: Build and push RPM packages for APIM 4.2.0
          requires:
            - Package bundle
      - job-release-notes-apim:
          context:
            - cicd-orchestrator
          name: Create release note pull request
          requires:
            - Package bundle
      - job-nexus-staging:
          context:
            - cicd-orchestrator
          name: Nexus staging
          requires:
            - Package bundle
      - job-slack-announcement:
          context:
            - cicd-orchestrator
          name: Announce release is starting
          message: 🎆 APIM - 4.2.0 released!
          requires:
            - Nexus staging
            - Push docker images to Snyk
            - Create release note pull request
            - Release Helm Chart
            - Build and push RPM packages for APIM 4.2.0
orbs:
  keeper: gravitee-io/keeper@0.6.3
  slack: circleci/slack@4.12.5
  artifactory-orb: jfrog/artifactory-orb@1.0.1
  aws-s3: circleci/aws-s3@3.0.0
  helm: circleci/helm@3.0.0
  gh: circleci/github-cli@1.0.5
