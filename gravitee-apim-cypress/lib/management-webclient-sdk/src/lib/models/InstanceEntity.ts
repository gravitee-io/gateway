/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.18.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InstanceState,
    InstanceStateFromJSON,
    InstanceStateFromJSONTyped,
    InstanceStateToJSON,
    PluginEntity,
    PluginEntityFromJSON,
    PluginEntityFromJSONTyped,
    PluginEntityToJSON,
} from './';

/**
 * 
 * @export
 * @interface InstanceEntity
 */
export interface InstanceEntity {
    /**
     * 
     * @type {string}
     * @memberof InstanceEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceEntity
     */
    event?: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceEntity
     */
    hostname?: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceEntity
     */
    ip?: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceEntity
     */
    port?: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceEntity
     */
    tenant?: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceEntity
     */
    version?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof InstanceEntity
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof InstanceEntity
     */
    environments?: Array<string>;
    /**
     * 
     * @type {InstanceState}
     * @memberof InstanceEntity
     */
    state?: InstanceState;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof InstanceEntity
     */
    systemProperties?: { [key: string]: string; };
    /**
     * 
     * @type {Array<PluginEntity>}
     * @memberof InstanceEntity
     */
    plugins?: Array<PluginEntity>;
    /**
     * 
     * @type {Date}
     * @memberof InstanceEntity
     */
    started_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof InstanceEntity
     */
    last_heartbeat_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof InstanceEntity
     */
    stopped_at?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof InstanceEntity
     */
    environments_hrids?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof InstanceEntity
     */
    organizations_hrids?: Array<string>;
}

export function InstanceEntityFromJSON(json: any): InstanceEntity {
    return InstanceEntityFromJSONTyped(json, false);
}

export function InstanceEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstanceEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'event': !exists(json, 'event') ? undefined : json['event'],
        'hostname': !exists(json, 'hostname') ? undefined : json['hostname'],
        'ip': !exists(json, 'ip') ? undefined : json['ip'],
        'port': !exists(json, 'port') ? undefined : json['port'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'environments': !exists(json, 'environments') ? undefined : json['environments'],
        'state': !exists(json, 'state') ? undefined : InstanceStateFromJSON(json['state']),
        'systemProperties': !exists(json, 'systemProperties') ? undefined : json['systemProperties'],
        'plugins': !exists(json, 'plugins') ? undefined : ((json['plugins'] as Array<any>).map(PluginEntityFromJSON)),
        'started_at': !exists(json, 'started_at') ? undefined : (new Date(json['started_at'])),
        'last_heartbeat_at': !exists(json, 'last_heartbeat_at') ? undefined : (new Date(json['last_heartbeat_at'])),
        'stopped_at': !exists(json, 'stopped_at') ? undefined : (new Date(json['stopped_at'])),
        'environments_hrids': !exists(json, 'environments_hrids') ? undefined : json['environments_hrids'],
        'organizations_hrids': !exists(json, 'organizations_hrids') ? undefined : json['organizations_hrids'],
    };
}

export function InstanceEntityToJSON(value?: InstanceEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'event': value.event,
        'hostname': value.hostname,
        'ip': value.ip,
        'port': value.port,
        'tenant': value.tenant,
        'version': value.version,
        'tags': value.tags,
        'environments': value.environments,
        'state': InstanceStateToJSON(value.state),
        'systemProperties': value.systemProperties,
        'plugins': value.plugins === undefined ? undefined : ((value.plugins as Array<any>).map(PluginEntityToJSON)),
        'started_at': value.started_at === undefined ? undefined : (value.started_at.toISOString()),
        'last_heartbeat_at': value.last_heartbeat_at === undefined ? undefined : (value.last_heartbeat_at.toISOString()),
        'stopped_at': value.stopped_at === undefined ? undefined : (value.stopped_at.toISOString()),
        'environments_hrids': value.environments_hrids,
        'organizations_hrids': value.organizations_hrids,
    };
}


