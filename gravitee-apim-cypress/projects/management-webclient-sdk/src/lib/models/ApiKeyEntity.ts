/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.18.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApplicationEntity,
    ApplicationEntityFromJSON,
    ApplicationEntityFromJSONTyped,
    ApplicationEntityToJSON,
    SubscriptionEntity,
    SubscriptionEntityFromJSON,
    SubscriptionEntityFromJSONTyped,
    SubscriptionEntityToJSON,
} from './';

/**
 * 
 * @export
 * @interface ApiKeyEntity
 */
export interface ApiKeyEntity {
    /**
     * 
     * @type {string}
     * @memberof ApiKeyEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ApiKeyEntity
     */
    key?: string;
    /**
     * 
     * @type {Array<SubscriptionEntity>}
     * @memberof ApiKeyEntity
     */
    subscriptions?: Array<SubscriptionEntity>;
    /**
     * 
     * @type {ApplicationEntity}
     * @memberof ApiKeyEntity
     */
    application?: ApplicationEntity;
    /**
     * 
     * @type {boolean}
     * @memberof ApiKeyEntity
     */
    revoked?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ApiKeyEntity
     */
    paused?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ApiKeyEntity
     */
    expired?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ApiKeyEntity
     */
    daysToExpirationOnLastNotification?: number;
    /**
     * 
     * @type {Date}
     * @memberof ApiKeyEntity
     */
    expire_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ApiKeyEntity
     */
    created_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ApiKeyEntity
     */
    updated_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ApiKeyEntity
     */
    revoked_at?: Date;
}

export function ApiKeyEntityFromJSON(json: any): ApiKeyEntity {
    return ApiKeyEntityFromJSONTyped(json, false);
}

export function ApiKeyEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiKeyEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'key': !exists(json, 'key') ? undefined : json['key'],
        'subscriptions': !exists(json, 'subscriptions') ? undefined : ((json['subscriptions'] as Array<any>).map(SubscriptionEntityFromJSON)),
        'application': !exists(json, 'application') ? undefined : ApplicationEntityFromJSON(json['application']),
        'revoked': !exists(json, 'revoked') ? undefined : json['revoked'],
        'paused': !exists(json, 'paused') ? undefined : json['paused'],
        'expired': !exists(json, 'expired') ? undefined : json['expired'],
        'daysToExpirationOnLastNotification': !exists(json, 'daysToExpirationOnLastNotification') ? undefined : json['daysToExpirationOnLastNotification'],
        'expire_at': !exists(json, 'expire_at') ? undefined : (new Date(json['expire_at'])),
        'created_at': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updated_at': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'revoked_at': !exists(json, 'revoked_at') ? undefined : (new Date(json['revoked_at'])),
    };
}

export function ApiKeyEntityToJSON(value?: ApiKeyEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'key': value.key,
        'subscriptions': value.subscriptions === undefined ? undefined : ((value.subscriptions as Array<any>).map(SubscriptionEntityToJSON)),
        'application': ApplicationEntityToJSON(value.application),
        'revoked': value.revoked,
        'paused': value.paused,
        'expired': value.expired,
        'daysToExpirationOnLastNotification': value.daysToExpirationOnLastNotification,
        'expire_at': value.expire_at === undefined ? undefined : (value.expire_at.toISOString()),
        'created_at': value.created_at === undefined ? undefined : (value.created_at.toISOString()),
        'updated_at': value.updated_at === undefined ? undefined : (value.updated_at.toISOString()),
        'revoked_at': value.revoked_at === undefined ? undefined : (value.revoked_at.toISOString()),
    };
}


