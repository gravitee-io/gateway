/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.18.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApiLifecycleState,
    ApiLifecycleStateFromJSON,
    ApiLifecycleStateFromJSONTyped,
    ApiLifecycleStateToJSON,
    PrimaryOwnerEntity,
    PrimaryOwnerEntityFromJSON,
    PrimaryOwnerEntityFromJSONTyped,
    PrimaryOwnerEntityToJSON,
    VirtualHost,
    VirtualHostFromJSON,
    VirtualHostFromJSONTyped,
    VirtualHostToJSON,
    Visibility,
    VisibilityFromJSON,
    VisibilityFromJSONTyped,
    VisibilityToJSON,
    WorkflowState,
    WorkflowStateFromJSON,
    WorkflowStateFromJSONTyped,
    WorkflowStateToJSON,
} from './';

/**
 * 
 * @export
 * @interface ApiListItem
 */
export interface ApiListItem {
    /**
     * Api's uuid.
     * @type {string}
     * @memberof ApiListItem
     */
    id?: string;
    /**
     * Api's name. Duplicate names can exists.
     * @type {string}
     * @memberof ApiListItem
     */
    name?: string;
    /**
     * Api's version. It's a simple string only used in the portal.
     * @type {string}
     * @memberof ApiListItem
     */
    version?: string;
    /**
     * Api's version. It's a simple string only used in the portal.
     * @type {string}
     * @memberof ApiListItem
     */
    description?: string;
    /**
     * 
     * @type {Visibility}
     * @memberof ApiListItem
     */
    visibility?: Visibility;
    /**
     * The status of the API regarding the gateway.
     * @type {string}
     * @memberof ApiListItem
     */
    state?: ApiListItemStateEnum;
    /**
     * 
     * @type {string}
     * @memberof ApiListItem
     */
    role?: string;
    /**
     * the list of categories associated with this API
     * @type {Array<string>}
     * @memberof ApiListItem
     */
    categories?: Array<string>;
    /**
     * the free list of labels associated with this API
     * @type {Array<string>}
     * @memberof ApiListItem
     */
    labels?: Array<string>;
    /**
     * How consumers have evaluated the API (between 0 to 5)
     * @type {number}
     * @memberof ApiListItem
     */
    rate?: number;
    /**
     * How many consumers have evaluated the API
     * @type {number}
     * @memberof ApiListItem
     */
    numberOfRatings?: number;
    /**
     * the list of sharding tags associated with this API.
     * @type {Array<string>}
     * @memberof ApiListItem
     */
    tags?: Array<string>;
    /**
     * The date (as a timestamp) when the API was created.
     * @type {Date}
     * @memberof ApiListItem
     */
    created_at?: Date;
    /**
     * The last date (as a timestamp) when the API was updated.
     * @type {Date}
     * @memberof ApiListItem
     */
    updated_at?: Date;
    /**
     * 
     * @type {PrimaryOwnerEntity}
     * @memberof ApiListItem
     */
    owner?: PrimaryOwnerEntity;
    /**
     * the API logo url.
     * @type {string}
     * @memberof ApiListItem
     */
    picture_url?: string;
    /**
     * 
     * @type {Array<VirtualHost>}
     * @memberof ApiListItem
     */
    virtual_hosts?: Array<VirtualHost>;
    /**
     * 
     * @type {ApiLifecycleState}
     * @memberof ApiListItem
     */
    lifecycle_state?: ApiLifecycleState;
    /**
     * 
     * @type {WorkflowState}
     * @memberof ApiListItem
     */
    workflow_state?: WorkflowState;
    /**
     * API's context path.
     * @type {string}
     * @memberof ApiListItem
     */
    context_path?: string;
    /**
     * true if HealthCheck is enabled globally or on one endpoint
     * @type {boolean}
     * @memberof ApiListItem
     */
    healthcheck_enabled?: boolean;
}

export function ApiListItemFromJSON(json: any): ApiListItem {
    return ApiListItemFromJSONTyped(json, false);
}

export function ApiListItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiListItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'visibility': !exists(json, 'visibility') ? undefined : VisibilityFromJSON(json['visibility']),
        'state': !exists(json, 'state') ? undefined : json['state'],
        'role': !exists(json, 'role') ? undefined : json['role'],
        'categories': !exists(json, 'categories') ? undefined : json['categories'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'rate': !exists(json, 'rate') ? undefined : json['rate'],
        'numberOfRatings': !exists(json, 'numberOfRatings') ? undefined : json['numberOfRatings'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'created_at': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updated_at': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'owner': !exists(json, 'owner') ? undefined : PrimaryOwnerEntityFromJSON(json['owner']),
        'picture_url': !exists(json, 'picture_url') ? undefined : json['picture_url'],
        'virtual_hosts': !exists(json, 'virtual_hosts') ? undefined : ((json['virtual_hosts'] as Array<any>).map(VirtualHostFromJSON)),
        'lifecycle_state': !exists(json, 'lifecycle_state') ? undefined : ApiLifecycleStateFromJSON(json['lifecycle_state']),
        'workflow_state': !exists(json, 'workflow_state') ? undefined : WorkflowStateFromJSON(json['workflow_state']),
        'context_path': !exists(json, 'context_path') ? undefined : json['context_path'],
        'healthcheck_enabled': !exists(json, 'healthcheck_enabled') ? undefined : json['healthcheck_enabled'],
    };
}

export function ApiListItemToJSON(value?: ApiListItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'version': value.version,
        'description': value.description,
        'visibility': VisibilityToJSON(value.visibility),
        'state': value.state,
        'role': value.role,
        'categories': value.categories,
        'labels': value.labels,
        'rate': value.rate,
        'numberOfRatings': value.numberOfRatings,
        'tags': value.tags,
        'created_at': value.created_at === undefined ? undefined : (value.created_at.toISOString()),
        'updated_at': value.updated_at === undefined ? undefined : (value.updated_at.toISOString()),
        'owner': PrimaryOwnerEntityToJSON(value.owner),
        'picture_url': value.picture_url,
        'virtual_hosts': value.virtual_hosts === undefined ? undefined : ((value.virtual_hosts as Array<any>).map(VirtualHostToJSON)),
        'lifecycle_state': ApiLifecycleStateToJSON(value.lifecycle_state),
        'workflow_state': WorkflowStateToJSON(value.workflow_state),
        'context_path': value.context_path,
        'healthcheck_enabled': value.healthcheck_enabled,
    };
}

/**
* @export
* @enum {string}
*/
export enum ApiListItemStateEnum {
    INITIALIZED = 'INITIALIZED',
    STOPPED = 'STOPPED',
    STOPPING = 'STOPPING',
    STARTED = 'STARTED',
    CLOSED = 'CLOSED'
}


