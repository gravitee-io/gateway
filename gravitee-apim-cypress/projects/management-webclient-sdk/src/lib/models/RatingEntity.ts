/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.18.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RatingAnswerEntity,
    RatingAnswerEntityFromJSON,
    RatingAnswerEntityFromJSONTyped,
    RatingAnswerEntityToJSON,
} from './';

/**
 * 
 * @export
 * @interface RatingEntity
 */
export interface RatingEntity {
    /**
     * 
     * @type {string}
     * @memberof RatingEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof RatingEntity
     */
    api?: string;
    /**
     * 
     * @type {string}
     * @memberof RatingEntity
     */
    user?: string;
    /**
     * 
     * @type {string}
     * @memberof RatingEntity
     */
    userDisplayName?: string;
    /**
     * 
     * @type {string}
     * @memberof RatingEntity
     */
    rate?: string;
    /**
     * 
     * @type {string}
     * @memberof RatingEntity
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof RatingEntity
     */
    comment?: string;
    /**
     * 
     * @type {Date}
     * @memberof RatingEntity
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof RatingEntity
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Array<RatingAnswerEntity>}
     * @memberof RatingEntity
     */
    answers?: Array<RatingAnswerEntity>;
}

export function RatingEntityFromJSON(json: any): RatingEntity {
    return RatingEntityFromJSONTyped(json, false);
}

export function RatingEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatingEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'api': !exists(json, 'api') ? undefined : json['api'],
        'user': !exists(json, 'user') ? undefined : json['user'],
        'userDisplayName': !exists(json, 'userDisplayName') ? undefined : json['userDisplayName'],
        'rate': !exists(json, 'rate') ? undefined : json['rate'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'answers': !exists(json, 'answers') ? undefined : ((json['answers'] as Array<any>).map(RatingAnswerEntityFromJSON)),
    };
}

export function RatingEntityToJSON(value?: RatingEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'api': value.api,
        'user': value.user,
        'userDisplayName': value.userDisplayName,
        'rate': value.rate,
        'title': value.title,
        'comment': value.comment,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'answers': value.answers === undefined ? undefined : ((value.answers as Array<any>).map(RatingAnswerEntityToJSON)),
    };
}


