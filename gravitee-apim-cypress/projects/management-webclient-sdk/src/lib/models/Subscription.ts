/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.18.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Api,
    ApiFromJSON,
    ApiFromJSONTyped,
    ApiToJSON,
    Application,
    ApplicationFromJSON,
    ApplicationFromJSONTyped,
    ApplicationToJSON,
    Plan,
    PlanFromJSON,
    PlanFromJSONTyped,
    PlanToJSON,
    SubscriptionStatus,
    SubscriptionStatusFromJSON,
    SubscriptionStatusFromJSONTyped,
    SubscriptionStatusToJSON,
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * 
 * @export
 * @interface Subscription
 */
export interface Subscription {
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    id?: string;
    /**
     * 
     * @type {Api}
     * @memberof Subscription
     */
    api?: Api;
    /**
     * 
     * @type {Plan}
     * @memberof Subscription
     */
    plan?: Plan;
    /**
     * 
     * @type {Application}
     * @memberof Subscription
     */
    application?: Application;
    /**
     * 
     * @type {SubscriptionStatus}
     * @memberof Subscription
     */
    status?: SubscriptionStatus;
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    request?: string;
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    reason?: string;
    /**
     * 
     * @type {Date}
     * @memberof Subscription
     */
    processed_at?: Date;
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    processed_by?: string;
    /**
     * 
     * @type {User}
     * @memberof Subscription
     */
    subscribed_by?: User;
    /**
     * 
     * @type {Date}
     * @memberof Subscription
     */
    starting_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Subscription
     */
    ending_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Subscription
     */
    created_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Subscription
     */
    updated_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Subscription
     */
    closed_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Subscription
     */
    paused_at?: Date;
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    client_id?: string;
}

export function SubscriptionFromJSON(json: any): Subscription {
    return SubscriptionFromJSONTyped(json, false);
}

export function SubscriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Subscription {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'api': !exists(json, 'api') ? undefined : ApiFromJSON(json['api']),
        'plan': !exists(json, 'plan') ? undefined : PlanFromJSON(json['plan']),
        'application': !exists(json, 'application') ? undefined : ApplicationFromJSON(json['application']),
        'status': !exists(json, 'status') ? undefined : SubscriptionStatusFromJSON(json['status']),
        'request': !exists(json, 'request') ? undefined : json['request'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'processed_at': !exists(json, 'processed_at') ? undefined : (new Date(json['processed_at'])),
        'processed_by': !exists(json, 'processed_by') ? undefined : json['processed_by'],
        'subscribed_by': !exists(json, 'subscribed_by') ? undefined : UserFromJSON(json['subscribed_by']),
        'starting_at': !exists(json, 'starting_at') ? undefined : (new Date(json['starting_at'])),
        'ending_at': !exists(json, 'ending_at') ? undefined : (new Date(json['ending_at'])),
        'created_at': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updated_at': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'closed_at': !exists(json, 'closed_at') ? undefined : (new Date(json['closed_at'])),
        'paused_at': !exists(json, 'paused_at') ? undefined : (new Date(json['paused_at'])),
        'client_id': !exists(json, 'client_id') ? undefined : json['client_id'],
    };
}

export function SubscriptionToJSON(value?: Subscription | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'api': ApiToJSON(value.api),
        'plan': PlanToJSON(value.plan),
        'application': ApplicationToJSON(value.application),
        'status': SubscriptionStatusToJSON(value.status),
        'request': value.request,
        'reason': value.reason,
        'processed_at': value.processed_at === undefined ? undefined : (value.processed_at.toISOString()),
        'processed_by': value.processed_by,
        'subscribed_by': UserToJSON(value.subscribed_by),
        'starting_at': value.starting_at === undefined ? undefined : (value.starting_at.toISOString()),
        'ending_at': value.ending_at === undefined ? undefined : (value.ending_at.toISOString()),
        'created_at': value.created_at === undefined ? undefined : (value.created_at.toISOString()),
        'updated_at': value.updated_at === undefined ? undefined : (value.updated_at.toISOString()),
        'closed_at': value.closed_at === undefined ? undefined : (value.closed_at.toISOString()),
        'paused_at': value.paused_at === undefined ? undefined : (value.paused_at.toISOString()),
        'client_id': value.client_id,
    };
}


