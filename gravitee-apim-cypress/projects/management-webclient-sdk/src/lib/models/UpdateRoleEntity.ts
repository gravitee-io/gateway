/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.18.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RoleScope,
    RoleScopeFromJSON,
    RoleScopeFromJSONTyped,
    RoleScopeToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateRoleEntity
 */
export interface UpdateRoleEntity {
    /**
     * 
     * @type {string}
     * @memberof UpdateRoleEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateRoleEntity
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateRoleEntity
     */
    description?: string;
    /**
     * 
     * @type {RoleScope}
     * @memberof UpdateRoleEntity
     */
    scope: RoleScope;
    /**
     * 
     * @type {{ [key: string]: Array<string>; }}
     * @memberof UpdateRoleEntity
     */
    permissions?: { [key: string]: Array<string>; };
    /**
     * 
     * @type {boolean}
     * @memberof UpdateRoleEntity
     */
    _default?: boolean;
}

export function UpdateRoleEntityFromJSON(json: any): UpdateRoleEntity {
    return UpdateRoleEntityFromJSONTyped(json, false);
}

export function UpdateRoleEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRoleEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'scope': RoleScopeFromJSON(json['scope']),
        'permissions': !exists(json, 'permissions') ? undefined : json['permissions'],
        '_default': !exists(json, 'default') ? undefined : json['default'],
    };
}

export function UpdateRoleEntityToJSON(value?: UpdateRoleEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'scope': RoleScopeToJSON(value.scope),
        'permissions': value.permissions,
        'default': value._default,
    };
}


