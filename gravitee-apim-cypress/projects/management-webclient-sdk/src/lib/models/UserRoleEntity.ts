/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.18.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RoleScope,
    RoleScopeFromJSON,
    RoleScopeFromJSONTyped,
    RoleScopeToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserRoleEntity
 */
export interface UserRoleEntity {
    /**
     * 
     * @type {string}
     * @memberof UserRoleEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleEntity
     */
    name?: string;
    /**
     * 
     * @type {RoleScope}
     * @memberof UserRoleEntity
     */
    scope?: RoleScope;
    /**
     * 
     * @type {{ [key: string]: Array<string>; }}
     * @memberof UserRoleEntity
     */
    permissions?: { [key: string]: Array<string>; };
}

export function UserRoleEntityFromJSON(json: any): UserRoleEntity {
    return UserRoleEntityFromJSONTyped(json, false);
}

export function UserRoleEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserRoleEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'scope': !exists(json, 'scope') ? undefined : RoleScopeFromJSON(json['scope']),
        'permissions': !exists(json, 'permissions') ? undefined : json['permissions'],
    };
}

export function UserRoleEntityToJSON(value?: UserRoleEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'scope': RoleScopeToJSON(value.scope),
        'permissions': value.permissions,
    };
}


