/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * Some news resources are in alpha version. This implies that they are likely to be modified or even removed in future versions. They are marked with the ðŸ§ª symbol
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ApiKeyMode } from './ApiKeyMode';
import {
    ApiKeyModeFromJSON,
    ApiKeyModeFromJSONTyped,
    ApiKeyModeToJSON,
} from './ApiKeyMode';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Application
 */
export interface Application {
    /**
     * 
     * @type {ApiKeyMode}
     * @memberof Application
     */
    apiKeyMode?: ApiKeyMode;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    domain?: string;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    name?: string;
    /**
     * 
     * @type {User}
     * @memberof Application
     */
    owner?: User;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    type?: string;
}

/**
 * Check if a given object implements the Application interface.
 */
export function instanceOfApplication(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ApplicationFromJSON(json: any): Application {
    return ApplicationFromJSONTyped(json, false);
}

export function ApplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Application {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiKeyMode': !exists(json, 'apiKeyMode') ? undefined : ApiKeyModeFromJSON(json['apiKeyMode']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'domain': !exists(json, 'domain') ? undefined : json['domain'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'owner': !exists(json, 'owner') ? undefined : UserFromJSON(json['owner']),
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function ApplicationToJSON(value?: Application | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiKeyMode': ApiKeyModeToJSON(value.apiKeyMode),
        'description': value.description,
        'domain': value.domain,
        'id': value.id,
        'name': value.name,
        'owner': UserToJSON(value.owner),
        'type': value.type,
    };
}

