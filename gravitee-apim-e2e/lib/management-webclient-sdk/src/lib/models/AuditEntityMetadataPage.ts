/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * Some news resources are in alpha version. This implies that they are likely to be modified or even removed in future versions. They are marked with the ðŸ§ª symbol
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditEntity } from './AuditEntity';
import {
    AuditEntityFromJSON,
    AuditEntityFromJSONTyped,
    AuditEntityToJSON,
} from './AuditEntity';

/**
 * 
 * @export
 * @interface AuditEntityMetadataPage
 */
export interface AuditEntityMetadataPage {
    /**
     * 
     * @type {Array<AuditEntity>}
     * @memberof AuditEntityMetadataPage
     */
    content?: Array<AuditEntity>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AuditEntityMetadataPage
     */
    metadata?: { [key: string]: string; };
    /**
     * 
     * @type {number}
     * @memberof AuditEntityMetadataPage
     */
    pageElements?: number;
    /**
     * 
     * @type {number}
     * @memberof AuditEntityMetadataPage
     */
    pageNumber?: number;
    /**
     * 
     * @type {number}
     * @memberof AuditEntityMetadataPage
     */
    totalElements?: number;
}

/**
 * Check if a given object implements the AuditEntityMetadataPage interface.
 */
export function instanceOfAuditEntityMetadataPage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuditEntityMetadataPageFromJSON(json: any): AuditEntityMetadataPage {
    return AuditEntityMetadataPageFromJSONTyped(json, false);
}

export function AuditEntityMetadataPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditEntityMetadataPage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'content': !exists(json, 'content') ? undefined : ((json['content'] as Array<any>).map(AuditEntityFromJSON)),
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'pageElements': !exists(json, 'pageElements') ? undefined : json['pageElements'],
        'pageNumber': !exists(json, 'pageNumber') ? undefined : json['pageNumber'],
        'totalElements': !exists(json, 'totalElements') ? undefined : json['totalElements'],
    };
}

export function AuditEntityMetadataPageToJSON(value?: AuditEntityMetadataPage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'content': value.content === undefined ? undefined : ((value.content as Array<any>).map(AuditEntityToJSON)),
        'metadata': value.metadata,
        'pageElements': value.pageElements,
        'pageNumber': value.pageNumber,
        'totalElements': value.totalElements,
    };
}

