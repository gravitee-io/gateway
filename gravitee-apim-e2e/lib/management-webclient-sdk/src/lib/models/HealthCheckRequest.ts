/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HttpHeader,
    HttpHeaderFromJSON,
    HttpHeaderFromJSONTyped,
    HttpHeaderToJSON,
} from './';

/**
 * 
 * @export
 * @interface HealthCheckRequest
 */
export interface HealthCheckRequest {
    /**
     * 
     * @type {string}
     * @memberof HealthCheckRequest
     */
    body?: string;
    /**
     * 
     * @type {boolean}
     * @memberof HealthCheckRequest
     */
    fromRoot?: boolean;
    /**
     * 
     * @type {Array<HttpHeader>}
     * @memberof HealthCheckRequest
     */
    headers?: Array<HttpHeader>;
    /**
     * 
     * @type {string}
     * @memberof HealthCheckRequest
     */
    method?: HealthCheckRequestMethodEnum;
    /**
     * 
     * @type {string}
     * @memberof HealthCheckRequest
     */
    path?: string;
}

export function HealthCheckRequestFromJSON(json: any): HealthCheckRequest {
    return HealthCheckRequestFromJSONTyped(json, false);
}

export function HealthCheckRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthCheckRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'body': !exists(json, 'body') ? undefined : json['body'],
        'fromRoot': !exists(json, 'fromRoot') ? undefined : json['fromRoot'],
        'headers': !exists(json, 'headers') ? undefined : ((json['headers'] as Array<any>).map(HttpHeaderFromJSON)),
        'method': !exists(json, 'method') ? undefined : json['method'],
        'path': !exists(json, 'path') ? undefined : json['path'],
    };
}

export function HealthCheckRequestToJSON(value?: HealthCheckRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'body': value.body,
        'fromRoot': value.fromRoot,
        'headers': value.headers === undefined ? undefined : ((value.headers as Array<any>).map(HttpHeaderToJSON)),
        'method': value.method,
        'path': value.path,
    };
}

/**
* @export
* @enum {string}
*/
export enum HealthCheckRequestMethodEnum {
    CONNECT = 'CONNECT',
    DELETE = 'DELETE',
    GET = 'GET',
    HEAD = 'HEAD',
    OPTIONS = 'OPTIONS',
    PATCH = 'PATCH',
    POST = 'POST',
    PUT = 'PUT',
    TRACE = 'TRACE',
    OTHER = 'OTHER'
}


