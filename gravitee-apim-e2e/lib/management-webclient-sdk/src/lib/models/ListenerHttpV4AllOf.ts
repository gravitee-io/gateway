/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Cors } from './Cors';
import {
    CorsFromJSON,
    CorsFromJSONTyped,
    CorsToJSON,
} from './Cors';
import type { EntrypointV4 } from './EntrypointV4';
import {
    EntrypointV4FromJSON,
    EntrypointV4FromJSONTyped,
    EntrypointV4ToJSON,
} from './EntrypointV4';
import type { Logging } from './Logging';
import {
    LoggingFromJSON,
    LoggingFromJSONTyped,
    LoggingToJSON,
} from './Logging';
import type { PathV4 } from './PathV4';
import {
    PathV4FromJSON,
    PathV4FromJSONTyped,
    PathV4ToJSON,
} from './PathV4';

/**
 * 
 * @export
 * @interface ListenerHttpV4AllOf
 */
export interface ListenerHttpV4AllOf {
    /**
     * 
     * @type {string}
     * @memberof ListenerHttpV4AllOf
     */
    type?: string;
    /**
     * 
     * @type {Array<PathV4>}
     * @memberof ListenerHttpV4AllOf
     */
    paths?: Array<PathV4>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ListenerHttpV4AllOf
     */
    pathMappings?: Array<string>;
    /**
     * 
     * @type {Array<EntrypointV4>}
     * @memberof ListenerHttpV4AllOf
     */
    entrypoints?: Array<EntrypointV4>;
    /**
     * 
     * @type {Cors}
     * @memberof ListenerHttpV4AllOf
     */
    cors?: Cors;
    /**
     * 
     * @type {Logging}
     * @memberof ListenerHttpV4AllOf
     */
    logging?: Logging;
}

/**
 * Check if a given object implements the ListenerHttpV4AllOf interface.
 */
export function instanceOfListenerHttpV4AllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ListenerHttpV4AllOfFromJSON(json: any): ListenerHttpV4AllOf {
    return ListenerHttpV4AllOfFromJSONTyped(json, false);
}

export function ListenerHttpV4AllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListenerHttpV4AllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'paths': !exists(json, 'paths') ? undefined : ((json['paths'] as Array<any>).map(PathV4FromJSON)),
        'pathMappings': !exists(json, 'pathMappings') ? undefined : json['pathMappings'],
        'entrypoints': !exists(json, 'entrypoints') ? undefined : ((json['entrypoints'] as Array<any>).map(EntrypointV4FromJSON)),
        'cors': !exists(json, 'cors') ? undefined : CorsFromJSON(json['cors']),
        'logging': !exists(json, 'logging') ? undefined : LoggingFromJSON(json['logging']),
    };
}

export function ListenerHttpV4AllOfToJSON(value?: ListenerHttpV4AllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'paths': value.paths === undefined ? undefined : ((value.paths as Array<any>).map(PathV4ToJSON)),
        'pathMappings': value.pathMappings,
        'entrypoints': value.entrypoints === undefined ? undefined : ((value.entrypoints as Array<any>).map(EntrypointV4ToJSON)),
        'cors': CorsToJSON(value.cors),
        'logging': LoggingToJSON(value.logging),
    };
}

