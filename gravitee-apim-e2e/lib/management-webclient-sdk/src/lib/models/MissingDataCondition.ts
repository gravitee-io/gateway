/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Condition } from './Condition';
import {
    ConditionFromJSON,
    ConditionFromJSONTyped,
    ConditionToJSON,
} from './Condition';
import type { MissingDataConditionAllOf } from './MissingDataConditionAllOf';
import {
    MissingDataConditionAllOfFromJSON,
    MissingDataConditionAllOfFromJSONTyped,
    MissingDataConditionAllOfToJSON,
} from './MissingDataConditionAllOf';
import type { Projection } from './Projection';
import {
    ProjectionFromJSON,
    ProjectionFromJSONTyped,
    ProjectionToJSON,
} from './Projection';

/**
 * 
 * @export
 * @interface MissingDataCondition
 */
export interface MissingDataCondition extends Condition {
    /**
     * 
     * @type {number}
     * @memberof MissingDataCondition
     */
    duration: number;
    /**
     * 
     * @type {string}
     * @memberof MissingDataCondition
     */
    timeUnit?: MissingDataConditionTimeUnitEnum;
}


/**
 * @export
 */
export const MissingDataConditionTimeUnitEnum = {
    NANOSECONDS: 'NANOSECONDS',
    MICROSECONDS: 'MICROSECONDS',
    MILLISECONDS: 'MILLISECONDS',
    SECONDS: 'SECONDS',
    MINUTES: 'MINUTES',
    HOURS: 'HOURS',
    DAYS: 'DAYS'
} as const;
export type MissingDataConditionTimeUnitEnum = typeof MissingDataConditionTimeUnitEnum[keyof typeof MissingDataConditionTimeUnitEnum];


/**
 * Check if a given object implements the MissingDataCondition interface.
 */
export function instanceOfMissingDataCondition(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "duration" in value;

    return isInstance;
}

export function MissingDataConditionFromJSON(json: any): MissingDataCondition {
    return MissingDataConditionFromJSONTyped(json, false);
}

export function MissingDataConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): MissingDataCondition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...ConditionFromJSONTyped(json, ignoreDiscriminator),
        'duration': json['duration'],
        'timeUnit': !exists(json, 'timeUnit') ? undefined : json['timeUnit'],
    };
}

export function MissingDataConditionToJSON(value?: MissingDataCondition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...ConditionToJSON(value),
        'duration': value.duration,
        'timeUnit': value.timeUnit,
    };
}

