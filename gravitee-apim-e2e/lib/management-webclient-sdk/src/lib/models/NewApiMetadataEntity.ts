/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * Some news resources are in alpha version. This implies that they are likely to be modified or even removed in future versions. They are marked with the ðŸ§ª symbol
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MetadataFormat } from './MetadataFormat';
import {
    MetadataFormatFromJSON,
    MetadataFormatFromJSONTyped,
    MetadataFormatToJSON,
} from './MetadataFormat';

/**
 * 
 * @export
 * @interface NewApiMetadataEntity
 */
export interface NewApiMetadataEntity {
    /**
     * 
     * @type {string}
     * @memberof NewApiMetadataEntity
     */
    apiId?: string;
    /**
     * 
     * @type {string}
     * @memberof NewApiMetadataEntity
     */
    defaultValue?: string;
    /**
     * 
     * @type {MetadataFormat}
     * @memberof NewApiMetadataEntity
     */
    format?: MetadataFormat;
    /**
     * 
     * @type {boolean}
     * @memberof NewApiMetadataEntity
     */
    hidden?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NewApiMetadataEntity
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof NewApiMetadataEntity
     */
    value?: string;
}

/**
 * Check if a given object implements the NewApiMetadataEntity interface.
 */
export function instanceOfNewApiMetadataEntity(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function NewApiMetadataEntityFromJSON(json: any): NewApiMetadataEntity {
    return NewApiMetadataEntityFromJSONTyped(json, false);
}

export function NewApiMetadataEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewApiMetadataEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiId': !exists(json, 'apiId') ? undefined : json['apiId'],
        'defaultValue': !exists(json, 'defaultValue') ? undefined : json['defaultValue'],
        'format': !exists(json, 'format') ? undefined : MetadataFormatFromJSON(json['format']),
        'hidden': !exists(json, 'hidden') ? undefined : json['hidden'],
        'name': json['name'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function NewApiMetadataEntityToJSON(value?: NewApiMetadataEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiId': value.apiId,
        'defaultValue': value.defaultValue,
        'format': MetadataFormatToJSON(value.format),
        'hidden': value.hidden,
        'name': value.name,
        'value': value.value,
    };
}

