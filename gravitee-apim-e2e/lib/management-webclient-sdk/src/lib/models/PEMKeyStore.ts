/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * Some news resources are in alpha version. This implies that they are likely to be modified or even removed in future versions. They are marked with the ðŸ§ª symbol
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { KeyStore } from './KeyStore';
import {
    KeyStoreFromJSON,
    KeyStoreFromJSONTyped,
    KeyStoreToJSON,
} from './KeyStore';
import type { PEMKeyStoreAllOf } from './PEMKeyStoreAllOf';
import {
    PEMKeyStoreAllOfFromJSON,
    PEMKeyStoreAllOfFromJSONTyped,
    PEMKeyStoreAllOfToJSON,
} from './PEMKeyStoreAllOf';

/**
 * 
 * @export
 * @interface PEMKeyStore
 */
export interface PEMKeyStore extends KeyStore {
    /**
     * 
     * @type {string}
     * @memberof PEMKeyStore
     */
    keyPath?: string;
    /**
     * 
     * @type {string}
     * @memberof PEMKeyStore
     */
    keyContent?: string;
    /**
     * 
     * @type {string}
     * @memberof PEMKeyStore
     */
    certPath?: string;
    /**
     * 
     * @type {string}
     * @memberof PEMKeyStore
     */
    certContent?: string;
}



/**
 * Check if a given object implements the PEMKeyStore interface.
 */
export function instanceOfPEMKeyStore(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PEMKeyStoreFromJSON(json: any): PEMKeyStore {
    return PEMKeyStoreFromJSONTyped(json, false);
}

export function PEMKeyStoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): PEMKeyStore {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...KeyStoreFromJSONTyped(json, ignoreDiscriminator),
        'keyPath': !exists(json, 'keyPath') ? undefined : json['keyPath'],
        'keyContent': !exists(json, 'keyContent') ? undefined : json['keyContent'],
        'certPath': !exists(json, 'certPath') ? undefined : json['certPath'],
        'certContent': !exists(json, 'certContent') ? undefined : json['certContent'],
    };
}

export function PEMKeyStoreToJSON(value?: PEMKeyStore | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...KeyStoreToJSON(value),
        'keyPath': value.keyPath,
        'keyContent': value.keyContent,
        'certPath': value.certPath,
        'certContent': value.certContent,
    };
}

