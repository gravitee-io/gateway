/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * Some news resources are in alpha version. This implies that they are likely to be modified or even removed in future versions. They are marked with the ðŸ§ª symbol
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PEMTrustStoreAllOf } from './PEMTrustStoreAllOf';
import {
    PEMTrustStoreAllOfFromJSON,
    PEMTrustStoreAllOfFromJSONTyped,
    PEMTrustStoreAllOfToJSON,
} from './PEMTrustStoreAllOf';
import type { TrustStore } from './TrustStore';
import {
    TrustStoreFromJSON,
    TrustStoreFromJSONTyped,
    TrustStoreToJSON,
} from './TrustStore';

/**
 * 
 * @export
 * @interface PEMTrustStore
 */
export interface PEMTrustStore extends TrustStore {
    /**
     * 
     * @type {string}
     * @memberof PEMTrustStore
     */
    path?: string;
    /**
     * 
     * @type {string}
     * @memberof PEMTrustStore
     */
    content?: string;
}



/**
 * Check if a given object implements the PEMTrustStore interface.
 */
export function instanceOfPEMTrustStore(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PEMTrustStoreFromJSON(json: any): PEMTrustStore {
    return PEMTrustStoreFromJSONTyped(json, false);
}

export function PEMTrustStoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): PEMTrustStore {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...TrustStoreFromJSONTyped(json, ignoreDiscriminator),
        'path': !exists(json, 'path') ? undefined : json['path'],
        'content': !exists(json, 'content') ? undefined : json['content'],
    };
}

export function PEMTrustStoreToJSON(value?: PEMTrustStore | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...TrustStoreToJSON(value),
        'path': value.path,
        'content': value.content,
    };
}

