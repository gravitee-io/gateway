/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * Some news resources are in alpha version. This implies that they are likely to be modified or even removed in future versions. They are marked with the ðŸ§ª symbol
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Payload
 */
export interface Payload {
    /**
     * 
     * @type {string}
     * @memberof Payload
     */
    clientId: string;
    /**
     * 
     * @type {string}
     * @memberof Payload
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof Payload
     */
    redirectUri: string;
    /**
     * 
     * @type {string}
     * @memberof Payload
     */
    state?: string;
}

/**
 * Check if a given object implements the Payload interface.
 */
export function instanceOfPayload(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "clientId" in value;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "redirectUri" in value;

    return isInstance;
}

export function PayloadFromJSON(json: any): Payload {
    return PayloadFromJSONTyped(json, false);
}

export function PayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): Payload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'clientId': json['clientId'],
        'code': json['code'],
        'redirectUri': json['redirectUri'],
        'state': !exists(json, 'state') ? undefined : json['state'],
    };
}

export function PayloadToJSON(value?: Payload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'clientId': value.clientId,
        'code': value.code,
        'redirectUri': value.redirectUri,
        'state': value.state,
    };
}

