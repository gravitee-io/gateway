/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * Some news resources are in alpha version. This implies that they are likely to be modified or even removed in future versions. They are marked with the ðŸ§ª symbol
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Enabled } from './Enabled';
import {
    EnabledFromJSON,
    EnabledFromJSONTyped,
    EnabledToJSON,
} from './Enabled';
import type { PortalAnalytics } from './PortalAnalytics';
import {
    PortalAnalyticsFromJSON,
    PortalAnalyticsFromJSONTyped,
    PortalAnalyticsToJSON,
} from './PortalAnalytics';
import type { PortalApis } from './PortalApis';
import {
    PortalApisFromJSON,
    PortalApisFromJSONTyped,
    PortalApisToJSON,
} from './PortalApis';
import type { PortalRating } from './PortalRating';
import {
    PortalRatingFromJSON,
    PortalRatingFromJSONTyped,
    PortalRatingToJSON,
} from './PortalRating';
import type { PortalUploadMedia } from './PortalUploadMedia';
import {
    PortalUploadMediaFromJSON,
    PortalUploadMediaFromJSONTyped,
    PortalUploadMediaToJSON,
} from './PortalUploadMedia';
import type { PortalUserCreation } from './PortalUserCreation';
import {
    PortalUserCreationFromJSON,
    PortalUserCreationFromJSONTyped,
    PortalUserCreationToJSON,
} from './PortalUserCreation';

/**
 * 
 * @export
 * @interface Portal
 */
export interface Portal {
    /**
     * 
     * @type {PortalAnalytics}
     * @memberof Portal
     */
    analytics?: PortalAnalytics;
    /**
     * 
     * @type {string}
     * @memberof Portal
     */
    apikeyHeader?: string;
    /**
     * 
     * @type {PortalApis}
     * @memberof Portal
     */
    apis?: PortalApis;
    /**
     * 
     * @type {string}
     * @memberof Portal
     */
    entrypoint?: string;
    /**
     * 
     * @type {string}
     * @memberof Portal
     */
    homepageTitle?: string;
    /**
     * 
     * @type {PortalRating}
     * @memberof Portal
     */
    rating?: PortalRating;
    /**
     * 
     * @type {Enabled}
     * @memberof Portal
     */
    support?: Enabled;
    /**
     * 
     * @type {PortalUploadMedia}
     * @memberof Portal
     */
    uploadMedia?: PortalUploadMedia;
    /**
     * 
     * @type {string}
     * @memberof Portal
     */
    url?: string;
    /**
     * 
     * @type {PortalUserCreation}
     * @memberof Portal
     */
    userCreation?: PortalUserCreation;
}

/**
 * Check if a given object implements the Portal interface.
 */
export function instanceOfPortal(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PortalFromJSON(json: any): Portal {
    return PortalFromJSONTyped(json, false);
}

export function PortalFromJSONTyped(json: any, ignoreDiscriminator: boolean): Portal {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'analytics': !exists(json, 'analytics') ? undefined : PortalAnalyticsFromJSON(json['analytics']),
        'apikeyHeader': !exists(json, 'apikeyHeader') ? undefined : json['apikeyHeader'],
        'apis': !exists(json, 'apis') ? undefined : PortalApisFromJSON(json['apis']),
        'entrypoint': !exists(json, 'entrypoint') ? undefined : json['entrypoint'],
        'homepageTitle': !exists(json, 'homepageTitle') ? undefined : json['homepageTitle'],
        'rating': !exists(json, 'rating') ? undefined : PortalRatingFromJSON(json['rating']),
        'support': !exists(json, 'support') ? undefined : EnabledFromJSON(json['support']),
        'uploadMedia': !exists(json, 'uploadMedia') ? undefined : PortalUploadMediaFromJSON(json['uploadMedia']),
        'url': !exists(json, 'url') ? undefined : json['url'],
        'userCreation': !exists(json, 'userCreation') ? undefined : PortalUserCreationFromJSON(json['userCreation']),
    };
}

export function PortalToJSON(value?: Portal | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'analytics': PortalAnalyticsToJSON(value.analytics),
        'apikeyHeader': value.apikeyHeader,
        'apis': PortalApisToJSON(value.apis),
        'entrypoint': value.entrypoint,
        'homepageTitle': value.homepageTitle,
        'rating': PortalRatingToJSON(value.rating),
        'support': EnabledToJSON(value.support),
        'uploadMedia': PortalUploadMediaToJSON(value.uploadMedia),
        'url': value.url,
        'userCreation': PortalUserCreationToJSON(value.userCreation),
    };
}

