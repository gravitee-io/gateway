/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ApplicationTypes } from './ApplicationTypes';
import {
    ApplicationTypesFromJSON,
    ApplicationTypesFromJSONTyped,
    ApplicationTypesToJSON,
} from './ApplicationTypes';
import type { ClientRegistration } from './ClientRegistration';
import {
    ClientRegistrationFromJSON,
    ClientRegistrationFromJSONTyped,
    ClientRegistrationToJSON,
} from './ClientRegistration';

/**
 * 
 * @export
 * @interface PortalApplicationSettings
 */
export interface PortalApplicationSettings {
    /**
     * 
     * @type {ClientRegistration}
     * @memberof PortalApplicationSettings
     */
    registration?: ClientRegistration;
    /**
     * 
     * @type {ApplicationTypes}
     * @memberof PortalApplicationSettings
     */
    types?: ApplicationTypes;
}

/**
 * Check if a given object implements the PortalApplicationSettings interface.
 */
export function instanceOfPortalApplicationSettings(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PortalApplicationSettingsFromJSON(json: any): PortalApplicationSettings {
    return PortalApplicationSettingsFromJSONTyped(json, false);
}

export function PortalApplicationSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortalApplicationSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'registration': !exists(json, 'registration') ? undefined : ClientRegistrationFromJSON(json['registration']),
        'types': !exists(json, 'types') ? undefined : ApplicationTypesFromJSON(json['types']),
    };
}

export function PortalApplicationSettingsToJSON(value?: PortalApplicationSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'registration': ClientRegistrationToJSON(value.registration),
        'types': ApplicationTypesToJSON(value.types),
    };
}

