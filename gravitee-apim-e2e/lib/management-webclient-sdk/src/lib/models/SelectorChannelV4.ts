/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Selector } from './Selector';
import {
    SelectorFromJSON,
    SelectorFromJSONTyped,
    SelectorToJSON,
} from './Selector';
import type { SelectorChannelV4AllOf } from './SelectorChannelV4AllOf';
import {
    SelectorChannelV4AllOfFromJSON,
    SelectorChannelV4AllOfFromJSONTyped,
    SelectorChannelV4AllOfToJSON,
} from './SelectorChannelV4AllOf';

/**
 * 
 * @export
 * @interface SelectorChannelV4
 */
export interface SelectorChannelV4 extends Selector {
    /**
     * 
     * @type {Array<string>}
     * @memberof SelectorChannelV4
     */
    operations?: Array<SelectorChannelV4OperationsEnum>;
    /**
     * 
     * @type {string}
     * @memberof SelectorChannelV4
     */
    channel: string;
    /**
     * 
     * @type {string}
     * @memberof SelectorChannelV4
     */
    channelOperator: SelectorChannelV4ChannelOperatorEnum;
}


/**
 * @export
 */
export const SelectorChannelV4OperationsEnum = {
    SUB: 'SUB',
    PUB: 'PUB'
} as const;
export type SelectorChannelV4OperationsEnum = typeof SelectorChannelV4OperationsEnum[keyof typeof SelectorChannelV4OperationsEnum];

/**
 * @export
 */
export const SelectorChannelV4ChannelOperatorEnum = {
    STARTS_WITH: 'STARTS_WITH',
    EQUALS: 'EQUALS'
} as const;
export type SelectorChannelV4ChannelOperatorEnum = typeof SelectorChannelV4ChannelOperatorEnum[keyof typeof SelectorChannelV4ChannelOperatorEnum];


/**
 * Check if a given object implements the SelectorChannelV4 interface.
 */
export function instanceOfSelectorChannelV4(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "channel" in value;
    isInstance = isInstance && "channelOperator" in value;

    return isInstance;
}

export function SelectorChannelV4FromJSON(json: any): SelectorChannelV4 {
    return SelectorChannelV4FromJSONTyped(json, false);
}

export function SelectorChannelV4FromJSONTyped(json: any, ignoreDiscriminator: boolean): SelectorChannelV4 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...SelectorFromJSONTyped(json, ignoreDiscriminator),
        'operations': !exists(json, 'operations') ? undefined : json['operations'],
        'channel': json['channel'],
        'channelOperator': json['channelOperator'],
    };
}

export function SelectorChannelV4ToJSON(value?: SelectorChannelV4 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...SelectorToJSON(value),
        'operations': value.operations,
        'channel': value.channel,
        'channelOperator': value.channelOperator,
    };
}

