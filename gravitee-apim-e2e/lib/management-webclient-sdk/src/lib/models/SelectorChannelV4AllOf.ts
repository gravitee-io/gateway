/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SelectorChannelV4AllOf
 */
export interface SelectorChannelV4AllOf {
    /**
     * 
     * @type {Array<string>}
     * @memberof SelectorChannelV4AllOf
     */
    operations?: Array<SelectorChannelV4AllOfOperationsEnum>;
    /**
     * 
     * @type {string}
     * @memberof SelectorChannelV4AllOf
     */
    channel?: string;
    /**
     * 
     * @type {string}
     * @memberof SelectorChannelV4AllOf
     */
    channelOperator?: SelectorChannelV4AllOfChannelOperatorEnum;
}


/**
 * @export
 */
export const SelectorChannelV4AllOfOperationsEnum = {
    SUB: 'SUB',
    PUB: 'PUB'
} as const;
export type SelectorChannelV4AllOfOperationsEnum = typeof SelectorChannelV4AllOfOperationsEnum[keyof typeof SelectorChannelV4AllOfOperationsEnum];

/**
 * @export
 */
export const SelectorChannelV4AllOfChannelOperatorEnum = {
    STARTS_WITH: 'STARTS_WITH',
    EQUALS: 'EQUALS'
} as const;
export type SelectorChannelV4AllOfChannelOperatorEnum = typeof SelectorChannelV4AllOfChannelOperatorEnum[keyof typeof SelectorChannelV4AllOfChannelOperatorEnum];


/**
 * Check if a given object implements the SelectorChannelV4AllOf interface.
 */
export function instanceOfSelectorChannelV4AllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SelectorChannelV4AllOfFromJSON(json: any): SelectorChannelV4AllOf {
    return SelectorChannelV4AllOfFromJSONTyped(json, false);
}

export function SelectorChannelV4AllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): SelectorChannelV4AllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'operations': !exists(json, 'operations') ? undefined : json['operations'],
        'channel': !exists(json, 'channel') ? undefined : json['channel'],
        'channelOperator': !exists(json, 'channelOperator') ? undefined : json['channelOperator'],
    };
}

export function SelectorChannelV4AllOfToJSON(value?: SelectorChannelV4AllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'operations': value.operations,
        'channel': value.channel,
        'channelOperator': value.channelOperator,
    };
}

