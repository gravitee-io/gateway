/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * Some news resources are in alpha version. This implies that they are likely to be modified or even removed in future versions. They are marked with the ðŸ§ª symbol
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntrypointV4 } from './EntrypointV4';
import {
    EntrypointV4FromJSON,
    EntrypointV4FromJSONTyped,
    EntrypointV4ToJSON,
} from './EntrypointV4';
import type { SubscriptionListenerV4AllOf } from './SubscriptionListenerV4AllOf';
import {
    SubscriptionListenerV4AllOfFromJSON,
    SubscriptionListenerV4AllOfFromJSONTyped,
    SubscriptionListenerV4AllOfToJSON,
} from './SubscriptionListenerV4AllOf';

/**
 * 
 * @export
 * @interface SubscriptionListenerV4
 */
export interface SubscriptionListenerV4 {
    /**
     * 
     * @type {string}
     * @memberof SubscriptionListenerV4
     */
    type: string;
    /**
     * 
     * @type {Array<EntrypointV4>}
     * @memberof SubscriptionListenerV4
     */
    entrypoints: Array<EntrypointV4>;
}

/**
 * Check if a given object implements the SubscriptionListenerV4 interface.
 */
export function instanceOfSubscriptionListenerV4(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "entrypoints" in value;

    return isInstance;
}

export function SubscriptionListenerV4FromJSON(json: any): SubscriptionListenerV4 {
    return SubscriptionListenerV4FromJSONTyped(json, false);
}

export function SubscriptionListenerV4FromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionListenerV4 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'entrypoints': ((json['entrypoints'] as Array<any>).map(EntrypointV4FromJSON)),
    };
}

export function SubscriptionListenerV4ToJSON(value?: SubscriptionListenerV4 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'entrypoints': ((value.entrypoints as Array<any>).map(EntrypointV4ToJSON)),
    };
}

