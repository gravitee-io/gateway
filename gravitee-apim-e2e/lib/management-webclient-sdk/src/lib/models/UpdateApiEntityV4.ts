/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApiLifecycleState,
    ApiLifecycleStateFromJSON,
    ApiLifecycleStateFromJSONTyped,
    ApiLifecycleStateToJSON,
    ApiMetadataEntity,
    ApiMetadataEntityFromJSON,
    ApiMetadataEntityFromJSONTyped,
    ApiMetadataEntityToJSON,
    ApiServicesV4,
    ApiServicesV4FromJSON,
    ApiServicesV4FromJSONTyped,
    ApiServicesV4ToJSON,
    EndpointGroupV4,
    EndpointGroupV4FromJSON,
    EndpointGroupV4FromJSONTyped,
    EndpointGroupV4ToJSON,
    FlowV4,
    FlowV4FromJSON,
    FlowV4FromJSONTyped,
    FlowV4ToJSON,
    ListenerV4,
    ListenerV4FromJSON,
    ListenerV4FromJSONTyped,
    ListenerV4ToJSON,
    PlanEntityV4,
    PlanEntityV4FromJSON,
    PlanEntityV4FromJSONTyped,
    PlanEntityV4ToJSON,
    PropertyEntityV4,
    PropertyEntityV4FromJSON,
    PropertyEntityV4FromJSONTyped,
    PropertyEntityV4ToJSON,
    ResourceV4,
    ResourceV4FromJSON,
    ResourceV4FromJSONTyped,
    ResourceV4ToJSON,
    ResponseTemplateV4,
    ResponseTemplateV4FromJSON,
    ResponseTemplateV4FromJSONTyped,
    ResponseTemplateV4ToJSON,
    Visibility,
    VisibilityFromJSON,
    VisibilityFromJSONTyped,
    VisibilityToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateApiEntityV4
 */
export interface UpdateApiEntityV4 {
    /**
     * Api's version. It's a simple string only used in the portal.
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    apiVersion: string;
    /**
     * the API background encoded in base64
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    background?: string;
    /**
     * the API background url.
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    backgroundUrl?: string;
    /**
     * the list of categories associated with this API
     * @type {Array<string>}
     * @memberof UpdateApiEntityV4
     */
    categories?: Array<string>;
    /**
     * API's crossId. Identifies API across environments.
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    crossId?: string;
    /**
     * API's gravitee definition version
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    definitionVersion: UpdateApiEntityV4DefinitionVersionEnum;
    /**
     * API's description. A short description of your API.
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    description: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateApiEntityV4
     */
    disableMembershipNotifications?: boolean;
    /**
     * A list of endpoint describing the endpoints to contact.
     * @type {Array<EndpointGroupV4>}
     * @memberof UpdateApiEntityV4
     */
    endpointGroups: Array<EndpointGroupV4>;
    /**
     * API's flow mode.
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    flowMode?: UpdateApiEntityV4FlowModeEnum;
    /**
     * A list of flows containing the policies configuration.
     * @type {Array<FlowV4>}
     * @memberof UpdateApiEntityV4
     */
    flows?: Array<FlowV4>;
    /**
     * API's groups. Used to add team in your API.
     * @type {Array<string>}
     * @memberof UpdateApiEntityV4
     */
    groups?: Array<string>;
    /**
     * API's uuid.
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    id?: string;
    /**
     * the free list of labels associated with this API
     * @type {Array<string>}
     * @memberof UpdateApiEntityV4
     */
    labels?: Array<string>;
    /**
     * 
     * @type {ApiLifecycleState}
     * @memberof UpdateApiEntityV4
     */
    lifecycleState?: ApiLifecycleState;
    /**
     * A list of listeners used to describe our you api could be reached.
     * @type {Array<ListenerV4>}
     * @memberof UpdateApiEntityV4
     */
    listeners: Array<ListenerV4>;
    /**
     * 
     * @type {Array<ApiMetadataEntity>}
     * @memberof UpdateApiEntityV4
     */
    metadata?: Array<ApiMetadataEntity>;
    /**
     * API's name. Duplicate names can exists.
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    name: string;
    /**
     * the API logo encoded in base64
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    picture?: string;
    /**
     * the API logo URL.
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    pictureUrl?: string;
    /**
     * A list of plans to apply on the API
     * @type {Array<PlanEntityV4>}
     * @memberof UpdateApiEntityV4
     */
    plans?: Array<PlanEntityV4>;
    /**
     * A dictionary (could be dynamic) of properties available in the API context.
     * @type {Array<PropertyEntityV4>}
     * @memberof UpdateApiEntityV4
     */
    properties?: Array<PropertyEntityV4>;
    /**
     * The list of API resources used by policies like cache resources or oauth2
     * @type {Array<ResourceV4>}
     * @memberof UpdateApiEntityV4
     */
    resources?: Array<ResourceV4>;
    /**
     * A map that allows you to configure the output of a request based on the event throws by the gateway. Example : Quota exceeded, api-key is missing, ...
     * @type {{ [key: string]: { [key: string]: ResponseTemplateV4; }; }}
     * @memberof UpdateApiEntityV4
     */
    responseTemplates?: { [key: string]: { [key: string]: ResponseTemplateV4; }; };
    /**
     * 
     * @type {ApiServicesV4}
     * @memberof UpdateApiEntityV4
     */
    services?: ApiServicesV4;
    /**
     * The list of sharding tags associated with this API.
     * @type {Array<string>}
     * @memberof UpdateApiEntityV4
     */
    tags?: Array<string>;
    /**
     * API's type
     * @type {string}
     * @memberof UpdateApiEntityV4
     */
    type: UpdateApiEntityV4TypeEnum;
    /**
     * 
     * @type {Visibility}
     * @memberof UpdateApiEntityV4
     */
    visibility: Visibility;
}

export function UpdateApiEntityV4FromJSON(json: any): UpdateApiEntityV4 {
    return UpdateApiEntityV4FromJSONTyped(json, false);
}

export function UpdateApiEntityV4FromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateApiEntityV4 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiVersion': json['apiVersion'],
        'background': !exists(json, 'background') ? undefined : json['background'],
        'backgroundUrl': !exists(json, 'backgroundUrl') ? undefined : json['backgroundUrl'],
        'categories': !exists(json, 'categories') ? undefined : json['categories'],
        'crossId': !exists(json, 'crossId') ? undefined : json['crossId'],
        'definitionVersion': json['definitionVersion'],
        'description': json['description'],
        'disableMembershipNotifications': !exists(json, 'disableMembershipNotifications') ? undefined : json['disableMembershipNotifications'],
        'endpointGroups': ((json['endpointGroups'] as Array<any>).map(EndpointGroupV4FromJSON)),
        'flowMode': !exists(json, 'flowMode') ? undefined : json['flowMode'],
        'flows': !exists(json, 'flows') ? undefined : ((json['flows'] as Array<any>).map(FlowV4FromJSON)),
        'groups': !exists(json, 'groups') ? undefined : json['groups'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'lifecycleState': !exists(json, 'lifecycleState') ? undefined : ApiLifecycleStateFromJSON(json['lifecycleState']),
        'listeners': ((json['listeners'] as Array<any>).map(ListenerV4FromJSON)),
        'metadata': !exists(json, 'metadata') ? undefined : ((json['metadata'] as Array<any>).map(ApiMetadataEntityFromJSON)),
        'name': json['name'],
        'picture': !exists(json, 'picture') ? undefined : json['picture'],
        'pictureUrl': !exists(json, 'pictureUrl') ? undefined : json['pictureUrl'],
        'plans': !exists(json, 'plans') ? undefined : ((json['plans'] as Array<any>).map(PlanEntityV4FromJSON)),
        'properties': !exists(json, 'properties') ? undefined : ((json['properties'] as Array<any>).map(PropertyEntityV4FromJSON)),
        'resources': !exists(json, 'resources') ? undefined : ((json['resources'] as Array<any>).map(ResourceV4FromJSON)),
        'responseTemplates': !exists(json, 'responseTemplates') ? undefined : json['responseTemplates'],
        'services': !exists(json, 'services') ? undefined : ApiServicesV4FromJSON(json['services']),
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'type': json['type'],
        'visibility': VisibilityFromJSON(json['visibility']),
    };
}

export function UpdateApiEntityV4ToJSON(value?: UpdateApiEntityV4 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiVersion': value.apiVersion,
        'background': value.background,
        'backgroundUrl': value.backgroundUrl,
        'categories': value.categories,
        'crossId': value.crossId,
        'definitionVersion': value.definitionVersion,
        'description': value.description,
        'disableMembershipNotifications': value.disableMembershipNotifications,
        'endpointGroups': ((value.endpointGroups as Array<any>).map(EndpointGroupV4ToJSON)),
        'flowMode': value.flowMode,
        'flows': value.flows === undefined ? undefined : ((value.flows as Array<any>).map(FlowV4ToJSON)),
        'groups': value.groups,
        'id': value.id,
        'labels': value.labels,
        'lifecycleState': ApiLifecycleStateToJSON(value.lifecycleState),
        'listeners': ((value.listeners as Array<any>).map(ListenerV4ToJSON)),
        'metadata': value.metadata === undefined ? undefined : ((value.metadata as Array<any>).map(ApiMetadataEntityToJSON)),
        'name': value.name,
        'picture': value.picture,
        'pictureUrl': value.pictureUrl,
        'plans': value.plans === undefined ? undefined : ((value.plans as Array<any>).map(PlanEntityV4ToJSON)),
        'properties': value.properties === undefined ? undefined : ((value.properties as Array<any>).map(PropertyEntityV4ToJSON)),
        'resources': value.resources === undefined ? undefined : ((value.resources as Array<any>).map(ResourceV4ToJSON)),
        'responseTemplates': value.responseTemplates,
        'services': ApiServicesV4ToJSON(value.services),
        'tags': value.tags,
        'type': value.type,
        'visibility': VisibilityToJSON(value.visibility),
    };
}

/**
* @export
* @enum {string}
*/
export enum UpdateApiEntityV4DefinitionVersionEnum {
    _100 = '1.0.0',
    _200 = '2.0.0',
    _400 = '4.0.0'
}
/**
* @export
* @enum {string}
*/
export enum UpdateApiEntityV4FlowModeEnum {
    DEFAULT = 'DEFAULT',
    BESTMATCH = 'BEST_MATCH'
}
/**
* @export
* @enum {string}
*/
export enum UpdateApiEntityV4TypeEnum {
    SYNC = 'SYNC',
    ASYNC = 'ASYNC'
}


