/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MetadataFormat } from './MetadataFormat';
import {
    MetadataFormatFromJSON,
    MetadataFormatFromJSONTyped,
    MetadataFormatToJSON,
} from './MetadataFormat';

/**
 * 
 * @export
 * @interface UpdateApplicationMetadataEntity
 */
export interface UpdateApplicationMetadataEntity {
    /**
     * 
     * @type {string}
     * @memberof UpdateApplicationMetadataEntity
     */
    applicationId?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateApplicationMetadataEntity
     */
    defaultValue?: string;
    /**
     * 
     * @type {MetadataFormat}
     * @memberof UpdateApplicationMetadataEntity
     */
    format?: MetadataFormat;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateApplicationMetadataEntity
     */
    hidden?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateApplicationMetadataEntity
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateApplicationMetadataEntity
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateApplicationMetadataEntity
     */
    value?: string;
}

/**
 * Check if a given object implements the UpdateApplicationMetadataEntity interface.
 */
export function instanceOfUpdateApplicationMetadataEntity(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function UpdateApplicationMetadataEntityFromJSON(json: any): UpdateApplicationMetadataEntity {
    return UpdateApplicationMetadataEntityFromJSONTyped(json, false);
}

export function UpdateApplicationMetadataEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateApplicationMetadataEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'applicationId': !exists(json, 'applicationId') ? undefined : json['applicationId'],
        'defaultValue': !exists(json, 'defaultValue') ? undefined : json['defaultValue'],
        'format': !exists(json, 'format') ? undefined : MetadataFormatFromJSON(json['format']),
        'hidden': !exists(json, 'hidden') ? undefined : json['hidden'],
        'key': !exists(json, 'key') ? undefined : json['key'],
        'name': json['name'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function UpdateApplicationMetadataEntityToJSON(value?: UpdateApplicationMetadataEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'applicationId': value.applicationId,
        'defaultValue': value.defaultValue,
        'format': MetadataFormatToJSON(value.format),
        'hidden': value.hidden,
        'key': value.key,
        'name': value.name,
        'value': value.value,
    };
}

