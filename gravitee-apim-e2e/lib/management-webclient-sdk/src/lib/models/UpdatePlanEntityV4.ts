/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * Some news resources are in alpha version. This implies that they are likely to be modified or even removed in future versions. They are marked with the ðŸ§ª symbol
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FlowV4 } from './FlowV4';
import {
    FlowV4FromJSON,
    FlowV4FromJSONTyped,
    FlowV4ToJSON,
} from './FlowV4';
import type { PlanSecurityV4 } from './PlanSecurityV4';
import {
    PlanSecurityV4FromJSON,
    PlanSecurityV4FromJSONTyped,
    PlanSecurityV4ToJSON,
} from './PlanSecurityV4';
import type { PlanValidationTypeV4 } from './PlanValidationTypeV4';
import {
    PlanValidationTypeV4FromJSON,
    PlanValidationTypeV4FromJSONTyped,
    PlanValidationTypeV4ToJSON,
} from './PlanValidationTypeV4';

/**
 * 
 * @export
 * @interface UpdatePlanEntityV4
 */
export interface UpdatePlanEntityV4 {
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdatePlanEntityV4
     */
    characteristics?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof UpdatePlanEntityV4
     */
    commentMessage?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdatePlanEntityV4
     */
    commentRequired?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdatePlanEntityV4
     */
    crossId?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdatePlanEntityV4
     */
    description: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdatePlanEntityV4
     */
    excludedGroups?: Array<string>;
    /**
     * 
     * @type {Array<FlowV4>}
     * @memberof UpdatePlanEntityV4
     */
    flows?: Array<FlowV4>;
    /**
     * 
     * @type {string}
     * @memberof UpdatePlanEntityV4
     */
    generalConditions?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdatePlanEntityV4
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdatePlanEntityV4
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof UpdatePlanEntityV4
     */
    order: number;
    /**
     * 
     * @type {PlanSecurityV4}
     * @memberof UpdatePlanEntityV4
     */
    security?: PlanSecurityV4;
    /**
     * 
     * @type {string}
     * @memberof UpdatePlanEntityV4
     */
    selectionRule?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdatePlanEntityV4
     */
    tags?: Array<string>;
    /**
     * 
     * @type {PlanValidationTypeV4}
     * @memberof UpdatePlanEntityV4
     */
    validation: PlanValidationTypeV4;
}

/**
 * Check if a given object implements the UpdatePlanEntityV4 interface.
 */
export function instanceOfUpdatePlanEntityV4(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "order" in value;
    isInstance = isInstance && "validation" in value;

    return isInstance;
}

export function UpdatePlanEntityV4FromJSON(json: any): UpdatePlanEntityV4 {
    return UpdatePlanEntityV4FromJSONTyped(json, false);
}

export function UpdatePlanEntityV4FromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePlanEntityV4 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'characteristics': !exists(json, 'characteristics') ? undefined : json['characteristics'],
        'commentMessage': !exists(json, 'commentMessage') ? undefined : json['commentMessage'],
        'commentRequired': !exists(json, 'commentRequired') ? undefined : json['commentRequired'],
        'crossId': !exists(json, 'crossId') ? undefined : json['crossId'],
        'description': json['description'],
        'excludedGroups': !exists(json, 'excludedGroups') ? undefined : json['excludedGroups'],
        'flows': !exists(json, 'flows') ? undefined : ((json['flows'] as Array<any>).map(FlowV4FromJSON)),
        'generalConditions': !exists(json, 'generalConditions') ? undefined : json['generalConditions'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'order': json['order'],
        'security': !exists(json, 'security') ? undefined : PlanSecurityV4FromJSON(json['security']),
        'selectionRule': !exists(json, 'selectionRule') ? undefined : json['selectionRule'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'validation': PlanValidationTypeV4FromJSON(json['validation']),
    };
}

export function UpdatePlanEntityV4ToJSON(value?: UpdatePlanEntityV4 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'characteristics': value.characteristics,
        'commentMessage': value.commentMessage,
        'commentRequired': value.commentRequired,
        'crossId': value.crossId,
        'description': value.description,
        'excludedGroups': value.excludedGroups,
        'flows': value.flows === undefined ? undefined : ((value.flows as Array<any>).map(FlowV4ToJSON)),
        'generalConditions': value.generalConditions,
        'id': value.id,
        'name': value.name,
        'order': value.order,
        'security': PlanSecurityV4ToJSON(value.security),
        'selectionRule': value.selectionRule,
        'tags': value.tags,
        'validation': PlanValidationTypeV4ToJSON(value.validation),
    };
}

