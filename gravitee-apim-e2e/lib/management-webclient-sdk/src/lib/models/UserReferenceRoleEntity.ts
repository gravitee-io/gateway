/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * Some news resources are in alpha version. This implies that they are likely to be modified or even removed in future versions. They are marked with the ðŸ§ª symbol
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MembershipReferenceType } from './MembershipReferenceType';
import {
    MembershipReferenceTypeFromJSON,
    MembershipReferenceTypeFromJSONTyped,
    MembershipReferenceTypeToJSON,
} from './MembershipReferenceType';

/**
 * 
 * @export
 * @interface UserReferenceRoleEntity
 */
export interface UserReferenceRoleEntity {
    /**
     * 
     * @type {string}
     * @memberof UserReferenceRoleEntity
     */
    referenceId?: string;
    /**
     * 
     * @type {MembershipReferenceType}
     * @memberof UserReferenceRoleEntity
     */
    referenceType?: MembershipReferenceType;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserReferenceRoleEntity
     */
    roles?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof UserReferenceRoleEntity
     */
    user?: string;
}

/**
 * Check if a given object implements the UserReferenceRoleEntity interface.
 */
export function instanceOfUserReferenceRoleEntity(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserReferenceRoleEntityFromJSON(json: any): UserReferenceRoleEntity {
    return UserReferenceRoleEntityFromJSONTyped(json, false);
}

export function UserReferenceRoleEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserReferenceRoleEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
        'referenceType': !exists(json, 'referenceType') ? undefined : MembershipReferenceTypeFromJSON(json['referenceType']),
        'roles': !exists(json, 'roles') ? undefined : json['roles'],
        'user': !exists(json, 'user') ? undefined : json['user'],
    };
}

export function UserReferenceRoleEntityToJSON(value?: UserReferenceRoleEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'referenceId': value.referenceId,
        'referenceType': MembershipReferenceTypeToJSON(value.referenceType),
        'roles': value.roles,
        'user': value.user,
    };
}

