{
  "id": "http-get-entrypoint-kafka-endpoint",
  "name": "my-api-auto",
  "apiVersion": "1.0",
  "definitionVersion": "4.0.0",
  "type": "message",
  "description": "api v4 using HTTP-GET entrypoint",
  "listeners": [
    {
      "type": "http",
      "paths": [
        {
          "path": "/test"
        }
      ],
      "entrypoints": [
        {
          "type": "http-get",
          "configuration": {
            "messagesLimitCount": 2,
            "messagesLimitDurationMs": 10000,
            "headersInPayload": true,
            "metadataInPayload": true
          }
        },
        {
          "type": "http-post",
          "configuration": {
            "requestHeadersToMessage": true
          }
        }
      ]
    }
  ],
  "endpointGroups": [
    {
      "name": "default-group",
      "type": "kafka",
      "endpoints": [
        {
          "name": "default",
          "type": "kafka",
          "weight": 1,
          "inheritConfiguration": false,
          "configuration": {
            "bootstrapServers": "http://localhost:9098"
          },
          "sharedConfigurationOverride": {
            "consumer": {
              "enabled": true,
              "topics": ["test-topic"],
              "autoOffsetReset": "earliest",
              "checkTopicExistence": true
            },
            "producer": {
              "enabled": true,
              "topics": ["test-topic"]
            }
          }
        },
        {
          "name": "second",
          "type": "kafka",
          "weight": 1,
          "inheritConfiguration": false,
          "configuration": {
            "bootstrapServers": "bootstrap-server"
          },
          "sharedConfigurationOverride": {
            "consumer": {
              "enabled": true,
              "topics": ["test-topic"],
              "autoOffsetReset": "earliest",
              "checkTopicExistence": true
            },
            "producer": {
              "enabled": true,
              "topics": ["test-topic"]
            }
          }
        }
      ]
    }
  ],
  "failover": {
    "enabled": true,
    "maxRetries": 2,
    "slowCallDuration": 500,
    "maxFailures": 2,
    "perSubscription": false
  },
  "flows": [],
  "analytics": {
    "enabled": false
  }
}
