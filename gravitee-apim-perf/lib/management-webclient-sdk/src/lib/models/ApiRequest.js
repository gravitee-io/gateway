/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { RequestFromJSON, RequestToJSON, ResponseFromJSON, ResponseToJSON, } from './';
export function ApiRequestFromJSON(json) {
    return ApiRequestFromJSONTyped(json, false);
}
export function ApiRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'api': !exists(json, 'api') ? undefined : json['api'],
        'apiResponseTime': !exists(json, 'apiResponseTime') ? undefined : json['apiResponseTime'],
        'application': !exists(json, 'application') ? undefined : json['application'],
        'clientRequest': !exists(json, 'clientRequest') ? undefined : RequestFromJSON(json['clientRequest']),
        'clientResponse': !exists(json, 'clientResponse') ? undefined : ResponseFromJSON(json['clientResponse']),
        'endpoint': !exists(json, 'endpoint') ? undefined : json['endpoint'],
        'gateway': !exists(json, 'gateway') ? undefined : json['gateway'],
        'host': !exists(json, 'host') ? undefined : json['host'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'localAddress': !exists(json, 'localAddress') ? undefined : json['localAddress'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'method': !exists(json, 'method') ? undefined : json['method'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'plan': !exists(json, 'plan') ? undefined : json['plan'],
        'proxyRequest': !exists(json, 'proxyRequest') ? undefined : RequestFromJSON(json['proxyRequest']),
        'proxyResponse': !exists(json, 'proxyResponse') ? undefined : ResponseFromJSON(json['proxyResponse']),
        'remoteAddress': !exists(json, 'remoteAddress') ? undefined : json['remoteAddress'],
        'requestContentLength': !exists(json, 'requestContentLength') ? undefined : json['requestContentLength'],
        'responseContentLength': !exists(json, 'responseContentLength') ? undefined : json['responseContentLength'],
        'responseTime': !exists(json, 'responseTime') ? undefined : json['responseTime'],
        'securityToken': !exists(json, 'securityToken') ? undefined : json['securityToken'],
        'securityType': !exists(json, 'securityType') ? undefined : json['securityType'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'subscription': !exists(json, 'subscription') ? undefined : json['subscription'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
        'transactionId': !exists(json, 'transactionId') ? undefined : json['transactionId'],
        'uri': !exists(json, 'uri') ? undefined : json['uri'],
        'user': !exists(json, 'user') ? undefined : json['user'],
    };
}
export function ApiRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'api': value.api,
        'apiResponseTime': value.apiResponseTime,
        'application': value.application,
        'clientRequest': RequestToJSON(value.clientRequest),
        'clientResponse': ResponseToJSON(value.clientResponse),
        'endpoint': value.endpoint,
        'gateway': value.gateway,
        'host': value.host,
        'id': value.id,
        'localAddress': value.localAddress,
        'message': value.message,
        'metadata': value.metadata,
        'method': value.method,
        'path': value.path,
        'plan': value.plan,
        'proxyRequest': RequestToJSON(value.proxyRequest),
        'proxyResponse': ResponseToJSON(value.proxyResponse),
        'remoteAddress': value.remoteAddress,
        'requestContentLength': value.requestContentLength,
        'responseContentLength': value.responseContentLength,
        'responseTime': value.responseTime,
        'securityToken': value.securityToken,
        'securityType': value.securityType,
        'status': value.status,
        'subscription': value.subscription,
        'tenant': value.tenant,
        'timestamp': value.timestamp,
        'transactionId': value.transactionId,
        'uri': value.uri,
        'user': value.user,
    };
}
/**
* @export
* @enum {string}
*/
export var ApiRequestMethodEnum;
(function (ApiRequestMethodEnum) {
    ApiRequestMethodEnum["CONNECT"] = "CONNECT";
    ApiRequestMethodEnum["DELETE"] = "DELETE";
    ApiRequestMethodEnum["GET"] = "GET";
    ApiRequestMethodEnum["HEAD"] = "HEAD";
    ApiRequestMethodEnum["OPTIONS"] = "OPTIONS";
    ApiRequestMethodEnum["PATCH"] = "PATCH";
    ApiRequestMethodEnum["POST"] = "POST";
    ApiRequestMethodEnum["PUT"] = "PUT";
    ApiRequestMethodEnum["TRACE"] = "TRACE";
    ApiRequestMethodEnum["OTHER"] = "OTHER";
})(ApiRequestMethodEnum || (ApiRequestMethodEnum = {}));
