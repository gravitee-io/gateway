{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",

    "definitions": {
        "bootstrapServers": {
            "title": "Bootstrap servers (bootstrap.servers)",
            "description": "This list should be in the form host1:port1,host2:port2,...",
            "type": "string",
            "gioConfig": {
                "banner": {
                    "title": "Bootstrap servers",
                    "text": "A list of host/port pairs, separated by a comma, to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrappingâ€”this list only impacts the initial hosts used to discover the full set of servers. "
                }
            }
        },

        "consumer": {
            "type": "object",
            "title": "Consumer",
            "properties": {
                "enabled": {
                    "const": true
                },
                "topics": {
                    "title": "Topics",
                    "description": "A list of kafka topics to use.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1
                },
                "encodeMessageId": {
                    "title": "Encode message Id",
                    "description": "This options allows encoding message id in base64.",
                    "type": "boolean",
                    "default": true
                },
                "autoOffsetReset": {
                    "title": "Auto offset reset (auto.offset.reset)",
                    "type": "string",
                    "default": "latest",
                    "enum": ["latest", "earliest", "none"],
                    "gioConfig": {
                        "banner": {
                            "title": "Auto offset reset",
                            "text": "What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server (e.g. because that data has been deleted): <ul><li>earliest: automatically reset the offset to the earliest offset<li>latest: automatically reset the offset to the latest offset</li><li>none: throw exception to the consumer if no previous offset is found for the consumer's group</li><li>anything else: throw exception to the consumer.</li></ul>"
                        }
                    }
                }
            },
            "additionalProperties": false,
            "required": ["enabled", "topics"]
        },
        "producer": {
            "type": "object",
            "title": "Producer",
            "properties": {
                "enabled": {
                    "const": true
                },
                "topics": {
                    "title": "Topics",
                    "description": "A list of kafka topics to use.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1
                }
            },
            "additionalProperties": false,
            "required": ["enabled", "topics"]
        }
    },

    "oneOf": [
        {
            "title": "Use Consumer",
            "properties": {
                "bootstrapServers": {
                    "$ref": "#/definitions/bootstrapServers"
                },
                "consumer": {
                    "$ref": "#/definitions/consumer"
                }
            },
            "required": ["bootstrapServers","consumer"],
            "additionalProperties": false
        },
        {
            "title": "Use Producer",
            "properties": {
                "bootstrapServers": {
                    "$ref": "#/definitions/bootstrapServers"
                },
                "producer": {
                    "$ref": "#/definitions/producer"
                }
            },
            "required": ["bootstrapServers",
                "producer"
            ],
            "additionalProperties": false
        },
        {
            "title": "Use Consumer and Producer",
            "properties": {
                "bootstrapServers": {
                    "$ref": "#/definitions/bootstrapServers"
                },
                "producer": {
                    "$ref": "#/definitions/producer"
                },
                "consumer": {
                    "$ref": "#/definitions/consumer"
                }
            },
            "required": ["bootstrapServers", "producer","consumer"
            ],
            "additionalProperties": false
        }
    ]
}
