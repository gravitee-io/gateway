{
    "type": "object",
    "id": "urn:jsonschema:io:gravitee:plugin:entrypoint:webhook:configuration:WebhookEntrypointConnectorSubscriptionConfiguration",
    "properties": {
        "callbackUrl": {
            "type": "string",
            "title": "The callback URL called by the entrypoint on a message",
            "description": "The callback URL called by the entrypoint on a message",
            "minLength": 1,
            "pattern": "^(http|https)://"
        },
        "headers": {
            "type": "array",
            "title": "HTTP Headers",
            "description": "The list of headers to add to the request to the callback URL",
            "items": {
                "type": "object",
                "title": "Header",
                "id": "urn:jsonschema:io:gravitee:plugin:entrypoint:webhook:configuration:HttpHeader",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "minLength": 1,
                        "pattern": "^\\S*$"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value"
                    }
                },
                "required": ["name", "value"]
            }
        },
        "ssl": {
            "type": "object",
            "title": "SSL Options",
            "id": "urn:jsonschema:io:gravitee:plugin:entrypoint:webhook:configuration:SslOptions",
            "properties": {
                "hostnameVerifier": {
                    "title": "Verify Host",
                    "description": "Use to enable host name verification",
                    "type": "boolean",
                    "default": true
                },
                "trustAll": {
                    "title": "Trust all",
                    "description": "Use this with caution (if over Internet). The gateway must trust any origin certificates. The connection will still be encrypted but this mode is vulnerable to 'man in the middle' attacks.",
                    "type": "boolean",
                    "default": false
                },
                "trustStore": {
                    "type": "object",
                    "title": "Trust store",
                    "id": "urn:jsonschema:io:gravitee:plugin:endpoint:webhook:advanced:configuration:SslTrustStoreOptions",
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "The type of the trust store",
                            "default": "",
                            "enum": ["", "JKS", "PKCS12", "PEM"],
                            "x-schema-form": {
                                "type": "select",
                                "titleMap": {
                                    "": "None",
                                    "JKS": "Java Trust Store (.jks)",
                                    "PKCS12": "PKCS#12 (.p12) / PFX (.pfx)",
                                    "PEM": "PEM (.pem)"
                                }
                            }
                        },
                        "password": {
                            "type": "string",
                            "title": "Password",
                            "description": "Trust store password",
                            "x-schema-form": {
                                "type": "password",
                                "hidden": [
                                    {
                                        "$eq": {
                                            "ssl.trustStore.type": ["", "PEM"]
                                        }
                                    }
                                ]
                            }
                        },
                        "content": {
                            "type": "string",
                            "title": "Content",
                            "description": "Binary content as Base64",
                            "x-schema-form": {
                                "type": "text",
                                "hidden": [
                                    {
                                        "$eq": {
                                            "ssl.trustStore.type": ""
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "oneOf": [
                        {
                            "properties": { "type": { "const": "" } }
                        },
                        {
                            "properties": { "type": { "const": "PEM" } },
                            "required": ["type", "content"],
                            "additionalProperties": false
                        },
                        {
                            "properties": { "type": { "pattern": "JKS|PKCS12" }, "content": {}, "password": {} },
                            "required": ["type", "content", "password"],
                            "additionalProperties": false
                        }
                    ],
                    "x-schema-form": {
                        "hidden": [
                            {
                                "$eq": {
                                    "ssl.trustAll": true
                                }
                            }
                        ]
                    }
                },
                "keyStore": {
                    "type": "object",
                    "title": "Key store",
                    "id": "urn:jsonschema:io:gravitee:plugin:endpoint:webhook:advanced:configuration:SslKeyStoreOptions",
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "The type of the key store",
                            "default": "",
                            "enum": ["", "JKS", "PKCS12", "PEM"],
                            "x-schema-form": {
                                "type": "select",
                                "titleMap": {
                                    "": "None",
                                    "JKS": "Java Trust Store (.jks)",
                                    "PKCS12": "PKCS#12 (.p12) / PFX (.pfx)",
                                    "PEM": "PEM (.pem)"
                                }
                            }
                        },
                        "password": {
                            "type": "string",
                            "title": "Password",
                            "description": "Password to use to open the key store",
                            "x-schema-form": {
                                "type": "password",
                                "hidden": [
                                    {
                                        "$eq": {
                                            "ssl.keyStore.type": ["", "PEM"]
                                        }
                                    }
                                ]
                            }
                        },
                        "alias": {
                            "type": "string",
                            "title": "Alias for the key",
                            "description": "Alias of the key to use in case the key store contains more than one key",
                            "x-schema-form": {
                                "type": "password",
                                "hidden": [
                                    {
                                        "$eq": {
                                            "ssl.keyStore.type": ["", "PEM"]
                                        }
                                    }
                                ]
                            }
                        },
                        "keyPassword": {
                            "type": "string",
                            "title": "Key Password",
                            "description": "Password to use to access the key when protected by password",
                            "x-schema-form": {
                                "type": "password",
                                "hidden": [
                                    {
                                        "$eq": {
                                            "ssl.keyStore.type": ["", "PEM"]
                                        }
                                    }
                                ]
                            }
                        },
                        "content": {
                            "type": "string",
                            "title": "Content",
                            "description": "Binary content as Base64",
                            "x-schema-form": {
                                "type": "text",
                                "hidden": [
                                    {
                                        "$eq": {
                                            "ssl.keyStore.type": ["", "PEM"]
                                        }
                                    }
                                ]
                            }
                        },
                        "certContent": {
                            "type": "string",
                            "title": "Certificate",
                            "x-schema-form": {
                                "type": "text",
                                "hidden": [
                                    {
                                        "$neq": {
                                            "ssl.keyStore.type": "PEM"
                                        }
                                    }
                                ]
                            }
                        },
                        "keyContent": {
                            "type": "string",
                            "title": "Private key",
                            "x-schema-form": {
                                "type": "text",
                                "hidden": [
                                    {
                                        "$neq": {
                                            "ssl.keyStore.type": "PEM"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "oneOf": [
                        {
                            "properties": { "type": { "const": "" } }
                        },
                        {
                            "properties": {
                                "type": { "const": "PEM" },
                                "password": {},
                                "alias": {},
                                "keyPassword": {},
                                "content": {},
                                "certContent": {},
                                "keyContent": {}
                            },
                            "required": ["type", "certContent", "keyContent"],
                            "additionalProperties": false
                        },
                        {
                            "properties": {
                                "type": { "pattern": "JKS|PKCS12" },
                                "password": {},
                                "alias": {},
                                "keyPassword": {},
                                "content": {},
                                "certContent": {},
                                "keyContent": {}
                            },
                            "required": ["type", "content", "password"],
                            "additionalProperties": false
                        }
                    ]
                }
            }
        }
    },
    "required": ["callbackUrl"]
}
