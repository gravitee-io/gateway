databaseChangeLog:
  - changeSet:
      id: 4.4.0_add_missing_environment_id
      author: GraviteeSource Team
      validCheckSum: ANY
      changes:
        - addColumn:
            tableName: ${gravitee_prefix}subscriptions
            columns:
              - column: { name: environment_id, type: nvarchar(64), constraints: { nullable: true }}
        - sql:
            dbms: 'mysql,mariadb'
            sql: UPDATE `${gravitee_prefix}subscriptions` s LEFT OUTER JOIN `${gravitee_prefix}apis` a ON s.api = a.id SET s.environment_id = a.environment_id;
        - sql:
            dbms: 'postgresql,mssql'
            sql: UPDATE ${gravitee_prefix}subscriptions SET environment_id = a.environment_id FROM ${gravitee_prefix}apis a WHERE api = a.id;
        - addNotNullConstraint:
            columnName: environment_id
            columnDataType: VARCHAR(64)
            tableName: ${gravitee_prefix}subscriptions
            validate: true
        - addColumn:
            tableName: ${gravitee_prefix}keys
            columns:
              - column: { name: environment_id, type: nvarchar(64), constraints: { nullable: true }}
        - sql:
            dbms: 'mysql,mariadb'
            sql: UPDATE `${gravitee_prefix}keys` k JOIN `${gravitee_prefix}apis` a ON k.api = a.id SET k.environment_id = a.environment_id;
        - sql:
            dbms: 'mysql,mariadb'
            sql: UPDATE `${gravitee_prefix}keys` k JOIN `${gravitee_prefix}key_subscriptions` ks ON k.id = ks.key_id JOIN `${gravitee_prefix}subscriptions` s ON ks.subscription_id = s.id SET k.environment_id = s.environment_id;
        - sql:
            dbms: 'postgresql,mssql'
            sql: UPDATE ${gravitee_prefix}keys SET environment_id = a.environment_id FROM ${gravitee_prefix}keys k, ${gravitee_prefix}apis a WHERE k.api = a.id;
        - sql:
            dbms: 'postgresql,mssql'
            sql: UPDATE ${gravitee_prefix}keys SET environment_id = s.environment_id FROM ${gravitee_prefix}keys k, ${gravitee_prefix}key_subscriptions ks, ${gravitee_prefix}subscriptions s WHERE k.id = ks.key_id AND ks.subscription_id = s.id;